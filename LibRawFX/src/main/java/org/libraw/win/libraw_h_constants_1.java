// Generated by jextract

package org.libraw.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.util.Objects;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class libraw_h_constants_1 extends libraw_h_constants_0 {

    /* package-private */ libraw_h_constants_1() {}
    static final MemoryLayout libraw_canon_makernotes_t$FlashGuideNumber$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashGuideNumber$LAYOUT() { return libraw_canon_makernotes_t$FlashGuideNumber$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashGuideNumber$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashGuideNumber"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashGuideNumber$VH() { return libraw_canon_makernotes_t$FlashGuideNumber$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ContinuousDrive$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ContinuousDrive$LAYOUT() { return libraw_canon_makernotes_t$ContinuousDrive$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ContinuousDrive$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ContinuousDrive"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ContinuousDrive$VH() { return libraw_canon_makernotes_t$ContinuousDrive$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorWidth$LAYOUT() { return libraw_canon_makernotes_t$SensorWidth$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorWidth$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorWidth"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorWidth$VH() { return libraw_canon_makernotes_t$SensorWidth$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorHeight$LAYOUT() { return libraw_canon_makernotes_t$SensorHeight$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorHeight$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorHeight"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorHeight$VH() { return libraw_canon_makernotes_t$SensorHeight$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorLeftBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorLeftBorder$LAYOUT() { return libraw_canon_makernotes_t$SensorLeftBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorLeftBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorLeftBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorLeftBorder$VH() { return libraw_canon_makernotes_t$SensorLeftBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorTopBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorTopBorder$LAYOUT() { return libraw_canon_makernotes_t$SensorTopBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorTopBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorTopBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorTopBorder$VH() { return libraw_canon_makernotes_t$SensorTopBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorRightBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorRightBorder$LAYOUT() { return libraw_canon_makernotes_t$SensorRightBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorRightBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorRightBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorRightBorder$VH() { return libraw_canon_makernotes_t$SensorRightBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SensorBottomBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SensorBottomBorder$LAYOUT() { return libraw_canon_makernotes_t$SensorBottomBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SensorBottomBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorBottomBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SensorBottomBorder$VH() { return libraw_canon_makernotes_t$SensorBottomBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$BlackMaskLeftBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$BlackMaskLeftBorder$LAYOUT() { return libraw_canon_makernotes_t$BlackMaskLeftBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$BlackMaskLeftBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackMaskLeftBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$BlackMaskLeftBorder$VH() { return libraw_canon_makernotes_t$BlackMaskLeftBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$BlackMaskTopBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$BlackMaskTopBorder$LAYOUT() { return libraw_canon_makernotes_t$BlackMaskTopBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$BlackMaskTopBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackMaskTopBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$BlackMaskTopBorder$VH() { return libraw_canon_makernotes_t$BlackMaskTopBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$BlackMaskRightBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$BlackMaskRightBorder$LAYOUT() { return libraw_canon_makernotes_t$BlackMaskRightBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$BlackMaskRightBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackMaskRightBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$BlackMaskRightBorder$VH() { return libraw_canon_makernotes_t$BlackMaskRightBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$BlackMaskBottomBorder$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$BlackMaskBottomBorder$LAYOUT() { return libraw_canon_makernotes_t$BlackMaskBottomBorder$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$BlackMaskBottomBorder$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackMaskBottomBorder"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$BlackMaskBottomBorder$VH() { return libraw_canon_makernotes_t$BlackMaskBottomBorder$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFMicroAdjMode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFMicroAdjMode$LAYOUT() { return libraw_canon_makernotes_t$AFMicroAdjMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFMicroAdjMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AFMicroAdjMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFMicroAdjMode$VH() { return libraw_canon_makernotes_t$AFMicroAdjMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFMicroAdjValue$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFMicroAdjValue$LAYOUT() { return libraw_canon_makernotes_t$AFMicroAdjValue$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFMicroAdjValue$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("AFMicroAdjValue"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFMicroAdjValue$VH() { return libraw_canon_makernotes_t$AFMicroAdjValue$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$MakernotesFlip$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$MakernotesFlip$LAYOUT() { return libraw_canon_makernotes_t$MakernotesFlip$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$MakernotesFlip$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MakernotesFlip"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$MakernotesFlip$VH() { return libraw_canon_makernotes_t$MakernotesFlip$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$RecordMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$RecordMode$LAYOUT() { return libraw_canon_makernotes_t$RecordMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$RecordMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("RecordMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$RecordMode$VH() { return libraw_canon_makernotes_t$RecordMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SRAWQuality$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SRAWQuality$LAYOUT() { return libraw_canon_makernotes_t$SRAWQuality$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SRAWQuality$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SRAWQuality"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SRAWQuality$VH() { return libraw_canon_makernotes_t$SRAWQuality$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$wbi$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$wbi$LAYOUT() { return libraw_canon_makernotes_t$wbi$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$wbi$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("wbi"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$wbi$VH() { return libraw_canon_makernotes_t$wbi$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$firmware$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$firmware$LAYOUT() { return libraw_canon_makernotes_t$firmware$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$firmware$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("firmware"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$firmware$VH() { return libraw_canon_makernotes_t$firmware$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$RF_lensID$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$RF_lensID$LAYOUT() { return libraw_canon_makernotes_t$RF_lensID$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$RF_lensID$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("RF_lensID"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$RF_lensID$VH() { return libraw_canon_makernotes_t$RF_lensID$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("BaseISO"),
        MemoryLayout.ofPaddingBits(32),
        C_DOUBLE.withName("Gain"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("Sensor"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("SensorUnit"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("HostBody"),
        C_INT.withName("SensorCode"),
        C_INT.withName("SensorSubCode"),
        C_INT.withName("CoatingCode"),
        C_INT.withName("uncropped"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("CaptureSequenceInitiator"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("SensorUnitConnector"),
        C_INT.withName("format"),
        MemoryLayout.ofSequence(2, C_INT).withName("nIFD_CM"),
        MemoryLayout.ofSequence(2, C_INT).withName("RecommendedCrop"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, C_DOUBLE)).withName("mnColorMatrix")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$struct$LAYOUT() { return libraw_hasselblad_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$BaseISO$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$BaseISO$LAYOUT() { return libraw_hasselblad_makernotes_t$BaseISO$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$BaseISO$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("BaseISO"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$BaseISO$VH() { return libraw_hasselblad_makernotes_t$BaseISO$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$Gain$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$Gain$LAYOUT() { return libraw_hasselblad_makernotes_t$Gain$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$Gain$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("Gain"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$Gain$VH() { return libraw_hasselblad_makernotes_t$Gain$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$SensorCode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$SensorCode$LAYOUT() { return libraw_hasselblad_makernotes_t$SensorCode$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$SensorCode$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SensorCode"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$SensorCode$VH() { return libraw_hasselblad_makernotes_t$SensorCode$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$SensorSubCode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$SensorSubCode$LAYOUT() { return libraw_hasselblad_makernotes_t$SensorSubCode$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$SensorSubCode$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SensorSubCode"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$SensorSubCode$VH() { return libraw_hasselblad_makernotes_t$SensorSubCode$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$CoatingCode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$CoatingCode$LAYOUT() { return libraw_hasselblad_makernotes_t$CoatingCode$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$CoatingCode$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("CoatingCode"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$CoatingCode$VH() { return libraw_hasselblad_makernotes_t$CoatingCode$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$uncropped$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$uncropped$LAYOUT() { return libraw_hasselblad_makernotes_t$uncropped$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$uncropped$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("uncropped"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$uncropped$VH() { return libraw_hasselblad_makernotes_t$uncropped$VH_; }

    static final MemoryLayout libraw_hasselblad_makernotes_t$format$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_hasselblad_makernotes_t$format$LAYOUT() { return libraw_hasselblad_makernotes_t$format$LAYOUT_; }

    static final VarHandle libraw_hasselblad_makernotes_t$format$VH_ = libraw_hasselblad_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("format"));
    static final java.lang.invoke.VarHandle libraw_hasselblad_makernotes_t$format$VH() { return libraw_hasselblad_makernotes_t$format$VH_; }

    static final MemoryLayout libraw_fuji_info_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("ExpoMidPointShift"),
        C_SHORT.withName("DynamicRange"),
        C_SHORT.withName("FilmMode"),
        C_SHORT.withName("DynamicRangeSetting"),
        C_SHORT.withName("DevelopmentDynamicRange"),
        C_SHORT.withName("AutoDynamicRange"),
        C_SHORT.withName("DRangePriority"),
        C_SHORT.withName("DRangePriorityAuto"),
        C_SHORT.withName("DRangePriorityFixed"),
        C_FLOAT.withName("BrightnessCompensation"),
        C_SHORT.withName("FocusMode"),
        C_SHORT.withName("AFMode"),
        MemoryLayout.ofSequence(2, C_SHORT).withName("FocusPixel"),
        MemoryLayout.ofSequence(3, C_SHORT).withName("ImageStabilization"),
        C_SHORT.withName("FlashMode"),
        C_SHORT.withName("WB_Preset"),
        C_SHORT.withName("ShutterType"),
        C_SHORT.withName("ExrMode"),
        C_SHORT.withName("Macro"),
        C_INT.withName("Rating"),
        C_SHORT.withName("CropMode"),
        C_SHORT.withName("FrameRate"),
        C_SHORT.withName("FrameWidth"),
        C_SHORT.withName("FrameHeight"),
        MemoryLayout.ofSequence(13, C_CHAR).withName("SerialSignature"),
        MemoryLayout.ofSequence(5, C_CHAR).withName("RAFVersion"),
        C_SHORT.withName("RAFDataVersion"),
        C_INT.withName("isTSNERDTS"),
        C_SHORT.withName("DriveMode"),
        MemoryLayout.ofPaddingBits(16)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$struct$LAYOUT() { return libraw_fuji_info_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_fuji_info_t$ExpoMidPointShift$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$ExpoMidPointShift$LAYOUT() { return libraw_fuji_info_t$ExpoMidPointShift$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$ExpoMidPointShift$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("ExpoMidPointShift"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$ExpoMidPointShift$VH() { return libraw_fuji_info_t$ExpoMidPointShift$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DynamicRange$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DynamicRange$LAYOUT() { return libraw_fuji_info_t$DynamicRange$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DynamicRange$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicRange"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DynamicRange$VH() { return libraw_fuji_info_t$DynamicRange$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FilmMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FilmMode$LAYOUT() { return libraw_fuji_info_t$FilmMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FilmMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FilmMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FilmMode$VH() { return libraw_fuji_info_t$FilmMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DynamicRangeSetting$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DynamicRangeSetting$LAYOUT() { return libraw_fuji_info_t$DynamicRangeSetting$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DynamicRangeSetting$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DynamicRangeSetting"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DynamicRangeSetting$VH() { return libraw_fuji_info_t$DynamicRangeSetting$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DevelopmentDynamicRange$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DevelopmentDynamicRange$LAYOUT() { return libraw_fuji_info_t$DevelopmentDynamicRange$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DevelopmentDynamicRange$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DevelopmentDynamicRange"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DevelopmentDynamicRange$VH() { return libraw_fuji_info_t$DevelopmentDynamicRange$VH_; }

    static final MemoryLayout libraw_fuji_info_t$AutoDynamicRange$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$AutoDynamicRange$LAYOUT() { return libraw_fuji_info_t$AutoDynamicRange$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$AutoDynamicRange$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AutoDynamicRange"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$AutoDynamicRange$VH() { return libraw_fuji_info_t$AutoDynamicRange$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DRangePriority$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DRangePriority$LAYOUT() { return libraw_fuji_info_t$DRangePriority$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DRangePriority$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DRangePriority"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DRangePriority$VH() { return libraw_fuji_info_t$DRangePriority$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DRangePriorityAuto$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DRangePriorityAuto$LAYOUT() { return libraw_fuji_info_t$DRangePriorityAuto$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DRangePriorityAuto$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DRangePriorityAuto"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DRangePriorityAuto$VH() { return libraw_fuji_info_t$DRangePriorityAuto$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DRangePriorityFixed$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DRangePriorityFixed$LAYOUT() { return libraw_fuji_info_t$DRangePriorityFixed$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DRangePriorityFixed$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DRangePriorityFixed"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DRangePriorityFixed$VH() { return libraw_fuji_info_t$DRangePriorityFixed$VH_; }

    static final MemoryLayout libraw_fuji_info_t$BrightnessCompensation$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$BrightnessCompensation$LAYOUT() { return libraw_fuji_info_t$BrightnessCompensation$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$BrightnessCompensation$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("BrightnessCompensation"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$BrightnessCompensation$VH() { return libraw_fuji_info_t$BrightnessCompensation$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FocusMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FocusMode$LAYOUT() { return libraw_fuji_info_t$FocusMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FocusMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FocusMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FocusMode$VH() { return libraw_fuji_info_t$FocusMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$AFMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$AFMode$LAYOUT() { return libraw_fuji_info_t$AFMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$AFMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$AFMode$VH() { return libraw_fuji_info_t$AFMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FlashMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FlashMode$LAYOUT() { return libraw_fuji_info_t$FlashMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FlashMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FlashMode$VH() { return libraw_fuji_info_t$FlashMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$WB_Preset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$WB_Preset$LAYOUT() { return libraw_fuji_info_t$WB_Preset$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$WB_Preset$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("WB_Preset"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$WB_Preset$VH() { return libraw_fuji_info_t$WB_Preset$VH_; }

    static final MemoryLayout libraw_fuji_info_t$ShutterType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$ShutterType$LAYOUT() { return libraw_fuji_info_t$ShutterType$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$ShutterType$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ShutterType"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$ShutterType$VH() { return libraw_fuji_info_t$ShutterType$VH_; }

    static final MemoryLayout libraw_fuji_info_t$ExrMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$ExrMode$LAYOUT() { return libraw_fuji_info_t$ExrMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$ExrMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ExrMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$ExrMode$VH() { return libraw_fuji_info_t$ExrMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$Macro$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$Macro$LAYOUT() { return libraw_fuji_info_t$Macro$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$Macro$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Macro"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$Macro$VH() { return libraw_fuji_info_t$Macro$VH_; }

    static final MemoryLayout libraw_fuji_info_t$Rating$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$Rating$LAYOUT() { return libraw_fuji_info_t$Rating$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$Rating$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Rating"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$Rating$VH() { return libraw_fuji_info_t$Rating$VH_; }

    static final MemoryLayout libraw_fuji_info_t$CropMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$CropMode$LAYOUT() { return libraw_fuji_info_t$CropMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$CropMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CropMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$CropMode$VH() { return libraw_fuji_info_t$CropMode$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FrameRate$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FrameRate$LAYOUT() { return libraw_fuji_info_t$FrameRate$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FrameRate$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FrameRate"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FrameRate$VH() { return libraw_fuji_info_t$FrameRate$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FrameWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FrameWidth$LAYOUT() { return libraw_fuji_info_t$FrameWidth$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FrameWidth$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FrameWidth"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FrameWidth$VH() { return libraw_fuji_info_t$FrameWidth$VH_; }

    static final MemoryLayout libraw_fuji_info_t$FrameHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$FrameHeight$LAYOUT() { return libraw_fuji_info_t$FrameHeight$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$FrameHeight$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FrameHeight"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$FrameHeight$VH() { return libraw_fuji_info_t$FrameHeight$VH_; }

    static final MemoryLayout libraw_fuji_info_t$RAFDataVersion$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$RAFDataVersion$LAYOUT() { return libraw_fuji_info_t$RAFDataVersion$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$RAFDataVersion$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("RAFDataVersion"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$RAFDataVersion$VH() { return libraw_fuji_info_t$RAFDataVersion$VH_; }

    static final MemoryLayout libraw_fuji_info_t$isTSNERDTS$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$isTSNERDTS$LAYOUT() { return libraw_fuji_info_t$isTSNERDTS$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$isTSNERDTS$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("isTSNERDTS"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$isTSNERDTS$VH() { return libraw_fuji_info_t$isTSNERDTS$VH_; }

    static final MemoryLayout libraw_fuji_info_t$DriveMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_fuji_info_t$DriveMode$LAYOUT() { return libraw_fuji_info_t$DriveMode$LAYOUT_; }

    static final VarHandle libraw_fuji_info_t$DriveMode$VH_ = libraw_fuji_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("DriveMode"));
    static final java.lang.invoke.VarHandle libraw_fuji_info_t$DriveMode$VH() { return libraw_fuji_info_t$DriveMode$VH_; }

    static final MemoryLayout libraw_sensor_highspeed_crop_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("cleft"),
        C_SHORT.withName("ctop"),
        C_SHORT.withName("cwidth"),
        C_SHORT.withName("cheight")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_sensor_highspeed_crop_t$struct$LAYOUT() { return libraw_sensor_highspeed_crop_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_sensor_highspeed_crop_t$cleft$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sensor_highspeed_crop_t$cleft$LAYOUT() { return libraw_sensor_highspeed_crop_t$cleft$LAYOUT_; }

    static final VarHandle libraw_sensor_highspeed_crop_t$cleft$VH_ = libraw_sensor_highspeed_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cleft"));
    static final java.lang.invoke.VarHandle libraw_sensor_highspeed_crop_t$cleft$VH() { return libraw_sensor_highspeed_crop_t$cleft$VH_; }

    static final MemoryLayout libraw_sensor_highspeed_crop_t$ctop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sensor_highspeed_crop_t$ctop$LAYOUT() { return libraw_sensor_highspeed_crop_t$ctop$LAYOUT_; }

    static final VarHandle libraw_sensor_highspeed_crop_t$ctop$VH_ = libraw_sensor_highspeed_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ctop"));
    static final java.lang.invoke.VarHandle libraw_sensor_highspeed_crop_t$ctop$VH() { return libraw_sensor_highspeed_crop_t$ctop$VH_; }

    static final MemoryLayout libraw_sensor_highspeed_crop_t$cwidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sensor_highspeed_crop_t$cwidth$LAYOUT() { return libraw_sensor_highspeed_crop_t$cwidth$LAYOUT_; }

    static final VarHandle libraw_sensor_highspeed_crop_t$cwidth$VH_ = libraw_sensor_highspeed_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cwidth"));
    static final java.lang.invoke.VarHandle libraw_sensor_highspeed_crop_t$cwidth$VH() { return libraw_sensor_highspeed_crop_t$cwidth$VH_; }

    static final MemoryLayout libraw_sensor_highspeed_crop_t$cheight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sensor_highspeed_crop_t$cheight$LAYOUT() { return libraw_sensor_highspeed_crop_t$cheight$LAYOUT_; }

    static final VarHandle libraw_sensor_highspeed_crop_t$cheight$VH_ = libraw_sensor_highspeed_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cheight"));
    static final java.lang.invoke.VarHandle libraw_sensor_highspeed_crop_t$cheight$VH() { return libraw_sensor_highspeed_crop_t$cheight$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_DOUBLE.withName("ExposureBracketValue"),
        C_SHORT.withName("ActiveDLighting"),
        C_SHORT.withName("ShootingMode"),
        MemoryLayout.ofSequence(7, C_CHAR).withName("ImageStabilization"),
        C_CHAR.withName("VibrationReduction"),
        C_CHAR.withName("VRMode"),
        MemoryLayout.ofSequence(7, C_CHAR).withName("FocusMode"),
        C_CHAR.withName("AFPoint"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("AFPointsInFocus"),
        C_CHAR.withName("ContrastDetectAF"),
        C_CHAR.withName("AFAreaMode"),
        C_CHAR.withName("PhaseDetectAF"),
        C_CHAR.withName("PrimaryAFPoint"),
        MemoryLayout.ofSequence(29, C_CHAR).withName("AFPointsUsed"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("AFImageWidth"),
        C_SHORT.withName("AFImageHeight"),
        C_SHORT.withName("AFAreaXPposition"),
        C_SHORT.withName("AFAreaYPosition"),
        C_SHORT.withName("AFAreaWidth"),
        C_SHORT.withName("AFAreaHeight"),
        C_CHAR.withName("ContrastDetectAFInFocus"),
        MemoryLayout.ofSequence(13, C_CHAR).withName("FlashSetting"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("FlashType"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("FlashExposureCompensation"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("ExternalFlashExposureComp"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("FlashExposureBracketValue"),
        C_CHAR.withName("FlashMode"),
        C_CHAR.withName("FlashExposureCompensation2"),
        C_CHAR.withName("FlashExposureCompensation3"),
        C_CHAR.withName("FlashExposureCompensation4"),
        C_CHAR.withName("FlashSource"),
        MemoryLayout.ofSequence(2, C_CHAR).withName("FlashFirmware"),
        C_CHAR.withName("ExternalFlashFlags"),
        C_CHAR.withName("FlashControlCommanderMode"),
        C_CHAR.withName("FlashOutputAndCompensation"),
        C_CHAR.withName("FlashFocalLength"),
        C_CHAR.withName("FlashGNDistance"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("FlashGroupControlMode"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("FlashGroupOutputAndCompensation"),
        C_CHAR.withName("FlashColorFilter"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("NEFCompression"),
        C_INT.withName("ExposureMode"),
        C_INT.withName("ExposureProgram"),
        C_INT.withName("nMEshots"),
        C_INT.withName("MEgainOn"),
        MemoryLayout.ofPaddingBits(32),
        MemoryLayout.ofSequence(4, C_DOUBLE).withName("ME_WB"),
        C_CHAR.withName("AFFineTune"),
        C_CHAR.withName("AFFineTuneIndex"),
        C_CHAR.withName("AFFineTuneAdj"),
        MemoryLayout.ofPaddingBits(8),
        C_INT.withName("LensDataVersion"),
        C_INT.withName("FlashInfoVersion"),
        C_INT.withName("ColorBalanceVersion"),
        C_CHAR.withName("key"),
        MemoryLayout.ofPaddingBits(8),
        MemoryLayout.ofSequence(4, C_SHORT).withName("NEFBitDepth"),
        C_SHORT.withName("HighSpeedCropFormat"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("cleft"),
            C_SHORT.withName("ctop"),
            C_SHORT.withName("cwidth"),
            C_SHORT.withName("cheight")
        ).withName("SensorHighSpeedCrop"),
        C_SHORT.withName("SensorWidth"),
        C_SHORT.withName("SensorHeight")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$struct$LAYOUT() { return libraw_nikon_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ExposureBracketValue$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ExposureBracketValue$LAYOUT() { return libraw_nikon_makernotes_t$ExposureBracketValue$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ExposureBracketValue$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("ExposureBracketValue"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ExposureBracketValue$VH() { return libraw_nikon_makernotes_t$ExposureBracketValue$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ActiveDLighting$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ActiveDLighting$LAYOUT() { return libraw_nikon_makernotes_t$ActiveDLighting$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ActiveDLighting$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ActiveDLighting"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ActiveDLighting$VH() { return libraw_nikon_makernotes_t$ActiveDLighting$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ShootingMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ShootingMode$LAYOUT() { return libraw_nikon_makernotes_t$ShootingMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ShootingMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ShootingMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ShootingMode$VH() { return libraw_nikon_makernotes_t$ShootingMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$VibrationReduction$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$VibrationReduction$LAYOUT() { return libraw_nikon_makernotes_t$VibrationReduction$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$VibrationReduction$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("VibrationReduction"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$VibrationReduction$VH() { return libraw_nikon_makernotes_t$VibrationReduction$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$VRMode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$VRMode$LAYOUT() { return libraw_nikon_makernotes_t$VRMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$VRMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("VRMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$VRMode$VH() { return libraw_nikon_makernotes_t$VRMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFPoint$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFPoint$LAYOUT() { return libraw_nikon_makernotes_t$AFPoint$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFPoint$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFPoint"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFPoint$VH() { return libraw_nikon_makernotes_t$AFPoint$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFPointsInFocus$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFPointsInFocus$LAYOUT() { return libraw_nikon_makernotes_t$AFPointsInFocus$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFPointsInFocus$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPointsInFocus"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFPointsInFocus$VH() { return libraw_nikon_makernotes_t$AFPointsInFocus$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ContrastDetectAF$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ContrastDetectAF$LAYOUT() { return libraw_nikon_makernotes_t$ContrastDetectAF$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ContrastDetectAF$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ContrastDetectAF"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ContrastDetectAF$VH() { return libraw_nikon_makernotes_t$ContrastDetectAF$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFAreaMode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFAreaMode$LAYOUT() { return libraw_nikon_makernotes_t$AFAreaMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFAreaMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFAreaMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFAreaMode$VH() { return libraw_nikon_makernotes_t$AFAreaMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$PhaseDetectAF$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$PhaseDetectAF$LAYOUT() { return libraw_nikon_makernotes_t$PhaseDetectAF$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$PhaseDetectAF$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PhaseDetectAF"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$PhaseDetectAF$VH() { return libraw_nikon_makernotes_t$PhaseDetectAF$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$PrimaryAFPoint$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$PrimaryAFPoint$LAYOUT() { return libraw_nikon_makernotes_t$PrimaryAFPoint$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$PrimaryAFPoint$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("PrimaryAFPoint"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$PrimaryAFPoint$VH() { return libraw_nikon_makernotes_t$PrimaryAFPoint$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFImageWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFImageWidth$LAYOUT() { return libraw_nikon_makernotes_t$AFImageWidth$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFImageWidth$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFImageWidth"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFImageWidth$VH() { return libraw_nikon_makernotes_t$AFImageWidth$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFImageHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFImageHeight$LAYOUT() { return libraw_nikon_makernotes_t$AFImageHeight$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFImageHeight$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFImageHeight"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFImageHeight$VH() { return libraw_nikon_makernotes_t$AFImageHeight$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFAreaXPposition$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFAreaXPposition$LAYOUT() { return libraw_nikon_makernotes_t$AFAreaXPposition$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFAreaXPposition$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAreaXPposition"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFAreaXPposition$VH() { return libraw_nikon_makernotes_t$AFAreaXPposition$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFAreaYPosition$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFAreaYPosition$LAYOUT() { return libraw_nikon_makernotes_t$AFAreaYPosition$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFAreaYPosition$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAreaYPosition"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFAreaYPosition$VH() { return libraw_nikon_makernotes_t$AFAreaYPosition$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFAreaWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFAreaWidth$LAYOUT() { return libraw_nikon_makernotes_t$AFAreaWidth$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFAreaWidth$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAreaWidth"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFAreaWidth$VH() { return libraw_nikon_makernotes_t$AFAreaWidth$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFAreaHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFAreaHeight$LAYOUT() { return libraw_nikon_makernotes_t$AFAreaHeight$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFAreaHeight$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAreaHeight"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFAreaHeight$VH() { return libraw_nikon_makernotes_t$AFAreaHeight$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ContrastDetectAFInFocus$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ContrastDetectAFInFocus$LAYOUT() { return libraw_nikon_makernotes_t$ContrastDetectAFInFocus$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ContrastDetectAFInFocus$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ContrastDetectAFInFocus"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ContrastDetectAFInFocus$VH() { return libraw_nikon_makernotes_t$ContrastDetectAFInFocus$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashMode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashMode$LAYOUT() { return libraw_nikon_makernotes_t$FlashMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashMode$VH() { return libraw_nikon_makernotes_t$FlashMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation2$LAYOUT() { return libraw_nikon_makernotes_t$FlashExposureCompensation2$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation2$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashExposureCompensation2"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation2$VH() { return libraw_nikon_makernotes_t$FlashExposureCompensation2$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation3$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation3$LAYOUT() { return libraw_nikon_makernotes_t$FlashExposureCompensation3$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation3$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashExposureCompensation3"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation3$VH() { return libraw_nikon_makernotes_t$FlashExposureCompensation3$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation4$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashExposureCompensation4$LAYOUT() { return libraw_nikon_makernotes_t$FlashExposureCompensation4$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation4$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashExposureCompensation4"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashExposureCompensation4$VH() { return libraw_nikon_makernotes_t$FlashExposureCompensation4$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashSource$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashSource$LAYOUT() { return libraw_nikon_makernotes_t$FlashSource$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashSource$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashSource"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashSource$VH() { return libraw_nikon_makernotes_t$FlashSource$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ExternalFlashFlags$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ExternalFlashFlags$LAYOUT() { return libraw_nikon_makernotes_t$ExternalFlashFlags$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ExternalFlashFlags$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("ExternalFlashFlags"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ExternalFlashFlags$VH() { return libraw_nikon_makernotes_t$ExternalFlashFlags$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashControlCommanderMode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashControlCommanderMode$LAYOUT() { return libraw_nikon_makernotes_t$FlashControlCommanderMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashControlCommanderMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashControlCommanderMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashControlCommanderMode$VH() { return libraw_nikon_makernotes_t$FlashControlCommanderMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashOutputAndCompensation$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashOutputAndCompensation$LAYOUT() { return libraw_nikon_makernotes_t$FlashOutputAndCompensation$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashOutputAndCompensation$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashOutputAndCompensation"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashOutputAndCompensation$VH() { return libraw_nikon_makernotes_t$FlashOutputAndCompensation$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashFocalLength$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashFocalLength$LAYOUT() { return libraw_nikon_makernotes_t$FlashFocalLength$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashFocalLength$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashFocalLength"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashFocalLength$VH() { return libraw_nikon_makernotes_t$FlashFocalLength$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashGNDistance$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashGNDistance$LAYOUT() { return libraw_nikon_makernotes_t$FlashGNDistance$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashGNDistance$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashGNDistance"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashGNDistance$VH() { return libraw_nikon_makernotes_t$FlashGNDistance$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashColorFilter$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashColorFilter$LAYOUT() { return libraw_nikon_makernotes_t$FlashColorFilter$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashColorFilter$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashColorFilter"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashColorFilter$VH() { return libraw_nikon_makernotes_t$FlashColorFilter$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$NEFCompression$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$NEFCompression$LAYOUT() { return libraw_nikon_makernotes_t$NEFCompression$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$NEFCompression$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NEFCompression"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$NEFCompression$VH() { return libraw_nikon_makernotes_t$NEFCompression$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ExposureMode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ExposureMode$LAYOUT() { return libraw_nikon_makernotes_t$ExposureMode$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ExposureMode$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExposureMode"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ExposureMode$VH() { return libraw_nikon_makernotes_t$ExposureMode$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ExposureProgram$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ExposureProgram$LAYOUT() { return libraw_nikon_makernotes_t$ExposureProgram$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ExposureProgram$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExposureProgram"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ExposureProgram$VH() { return libraw_nikon_makernotes_t$ExposureProgram$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$nMEshots$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$nMEshots$LAYOUT() { return libraw_nikon_makernotes_t$nMEshots$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$nMEshots$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("nMEshots"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$nMEshots$VH() { return libraw_nikon_makernotes_t$nMEshots$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$MEgainOn$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$MEgainOn$LAYOUT() { return libraw_nikon_makernotes_t$MEgainOn$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$MEgainOn$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MEgainOn"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$MEgainOn$VH() { return libraw_nikon_makernotes_t$MEgainOn$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFFineTune$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFFineTune$LAYOUT() { return libraw_nikon_makernotes_t$AFFineTune$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFFineTune$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFFineTune"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFFineTune$VH() { return libraw_nikon_makernotes_t$AFFineTune$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFFineTuneIndex$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFFineTuneIndex$LAYOUT() { return libraw_nikon_makernotes_t$AFFineTuneIndex$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFFineTuneIndex$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFFineTuneIndex"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFFineTuneIndex$VH() { return libraw_nikon_makernotes_t$AFFineTuneIndex$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$AFFineTuneAdj$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$AFFineTuneAdj$LAYOUT() { return libraw_nikon_makernotes_t$AFFineTuneAdj$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$AFFineTuneAdj$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFFineTuneAdj"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$AFFineTuneAdj$VH() { return libraw_nikon_makernotes_t$AFFineTuneAdj$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$LensDataVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$LensDataVersion$LAYOUT() { return libraw_nikon_makernotes_t$LensDataVersion$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$LensDataVersion$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LensDataVersion"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$LensDataVersion$VH() { return libraw_nikon_makernotes_t$LensDataVersion$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$FlashInfoVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$FlashInfoVersion$LAYOUT() { return libraw_nikon_makernotes_t$FlashInfoVersion$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$FlashInfoVersion$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("FlashInfoVersion"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$FlashInfoVersion$VH() { return libraw_nikon_makernotes_t$FlashInfoVersion$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$ColorBalanceVersion$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$ColorBalanceVersion$LAYOUT() { return libraw_nikon_makernotes_t$ColorBalanceVersion$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$ColorBalanceVersion$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ColorBalanceVersion"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$ColorBalanceVersion$VH() { return libraw_nikon_makernotes_t$ColorBalanceVersion$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$key$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$key$LAYOUT() { return libraw_nikon_makernotes_t$key$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$key$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("key"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$key$VH() { return libraw_nikon_makernotes_t$key$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$HighSpeedCropFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$HighSpeedCropFormat$LAYOUT() { return libraw_nikon_makernotes_t$HighSpeedCropFormat$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$HighSpeedCropFormat$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("HighSpeedCropFormat"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$HighSpeedCropFormat$VH() { return libraw_nikon_makernotes_t$HighSpeedCropFormat$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$SensorWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$SensorWidth$LAYOUT() { return libraw_nikon_makernotes_t$SensorWidth$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$SensorWidth$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorWidth"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$SensorWidth$VH() { return libraw_nikon_makernotes_t$SensorWidth$VH_; }

    static final MemoryLayout libraw_nikon_makernotes_t$SensorHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_nikon_makernotes_t$SensorHeight$LAYOUT() { return libraw_nikon_makernotes_t$SensorHeight$LAYOUT_; }

    static final VarHandle libraw_nikon_makernotes_t$SensorHeight$VH_ = libraw_nikon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SensorHeight"));
    static final java.lang.invoke.VarHandle libraw_nikon_makernotes_t$SensorHeight$VH() { return libraw_nikon_makernotes_t$SensorHeight$VH_; }

    static final MemoryLayout libraw_olympus_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(2, C_INT).withName("SensorCalibration"),
        MemoryLayout.ofSequence(2, C_SHORT).withName("FocusMode"),
        C_SHORT.withName("AutoFocus"),
        C_SHORT.withName("AFPoint"),
        MemoryLayout.ofSequence(64, C_INT).withName("AFAreas"),
        MemoryLayout.ofSequence(5, C_DOUBLE).withName("AFPointSelected"),
        C_SHORT.withName("AFResult"),
        MemoryLayout.ofSequence(5, C_SHORT).withName("DriveMode"),
        C_SHORT.withName("ColorSpace"),
        C_CHAR.withName("AFFineTune"),
        MemoryLayout.ofPaddingBits(8),
        MemoryLayout.ofSequence(3, C_SHORT).withName("AFFineTuneAdj"),
        MemoryLayout.ofSequence(6, C_CHAR).withName("CameraType2"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$struct$LAYOUT() { return libraw_olympus_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_olympus_makernotes_t$AutoFocus$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$AutoFocus$LAYOUT() { return libraw_olympus_makernotes_t$AutoFocus$LAYOUT_; }

    static final VarHandle libraw_olympus_makernotes_t$AutoFocus$VH_ = libraw_olympus_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AutoFocus"));
    static final java.lang.invoke.VarHandle libraw_olympus_makernotes_t$AutoFocus$VH() { return libraw_olympus_makernotes_t$AutoFocus$VH_; }

    static final MemoryLayout libraw_olympus_makernotes_t$AFPoint$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$AFPoint$LAYOUT() { return libraw_olympus_makernotes_t$AFPoint$LAYOUT_; }

    static final VarHandle libraw_olympus_makernotes_t$AFPoint$VH_ = libraw_olympus_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPoint"));
    static final java.lang.invoke.VarHandle libraw_olympus_makernotes_t$AFPoint$VH() { return libraw_olympus_makernotes_t$AFPoint$VH_; }

    static final MemoryLayout libraw_olympus_makernotes_t$AFResult$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$AFResult$LAYOUT() { return libraw_olympus_makernotes_t$AFResult$LAYOUT_; }

    static final VarHandle libraw_olympus_makernotes_t$AFResult$VH_ = libraw_olympus_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFResult"));
    static final java.lang.invoke.VarHandle libraw_olympus_makernotes_t$AFResult$VH() { return libraw_olympus_makernotes_t$AFResult$VH_; }

    static final MemoryLayout libraw_olympus_makernotes_t$ColorSpace$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$ColorSpace$LAYOUT() { return libraw_olympus_makernotes_t$ColorSpace$LAYOUT_; }

    static final VarHandle libraw_olympus_makernotes_t$ColorSpace$VH_ = libraw_olympus_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ColorSpace"));
    static final java.lang.invoke.VarHandle libraw_olympus_makernotes_t$ColorSpace$VH() { return libraw_olympus_makernotes_t$ColorSpace$VH_; }

    static final MemoryLayout libraw_olympus_makernotes_t$AFFineTune$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_olympus_makernotes_t$AFFineTune$LAYOUT() { return libraw_olympus_makernotes_t$AFFineTune$LAYOUT_; }

    static final VarHandle libraw_olympus_makernotes_t$AFFineTune$VH_ = libraw_olympus_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFFineTune"));
    static final java.lang.invoke.VarHandle libraw_olympus_makernotes_t$AFFineTune$VH() { return libraw_olympus_makernotes_t$AFFineTune$VH_; }

    static final MemoryLayout libraw_panasonic_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("Compression"),
        C_SHORT.withName("BlackLevelDim"),
        MemoryLayout.ofSequence(8, C_FLOAT).withName("BlackLevel"),
        C_INT.withName("Multishot"),
        C_FLOAT.withName("gamma"),
        MemoryLayout.ofSequence(3, C_INT).withName("HighISOMultiplier")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_panasonic_makernotes_t$struct$LAYOUT() { return libraw_panasonic_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_panasonic_makernotes_t$Compression$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_panasonic_makernotes_t$Compression$LAYOUT() { return libraw_panasonic_makernotes_t$Compression$LAYOUT_; }

    static final VarHandle libraw_panasonic_makernotes_t$Compression$VH_ = libraw_panasonic_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Compression"));
    static final java.lang.invoke.VarHandle libraw_panasonic_makernotes_t$Compression$VH() { return libraw_panasonic_makernotes_t$Compression$VH_; }

    static final MemoryLayout libraw_panasonic_makernotes_t$BlackLevelDim$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_panasonic_makernotes_t$BlackLevelDim$LAYOUT() { return libraw_panasonic_makernotes_t$BlackLevelDim$LAYOUT_; }

    static final VarHandle libraw_panasonic_makernotes_t$BlackLevelDim$VH_ = libraw_panasonic_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackLevelDim"));
    static final java.lang.invoke.VarHandle libraw_panasonic_makernotes_t$BlackLevelDim$VH() { return libraw_panasonic_makernotes_t$BlackLevelDim$VH_; }

    static final MemoryLayout libraw_panasonic_makernotes_t$Multishot$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_panasonic_makernotes_t$Multishot$LAYOUT() { return libraw_panasonic_makernotes_t$Multishot$LAYOUT_; }

    static final VarHandle libraw_panasonic_makernotes_t$Multishot$VH_ = libraw_panasonic_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Multishot"));
    static final java.lang.invoke.VarHandle libraw_panasonic_makernotes_t$Multishot$VH() { return libraw_panasonic_makernotes_t$Multishot$VH_; }

    static final MemoryLayout libraw_panasonic_makernotes_t$gamma$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_panasonic_makernotes_t$gamma$LAYOUT() { return libraw_panasonic_makernotes_t$gamma$LAYOUT_; }

    static final VarHandle libraw_panasonic_makernotes_t$gamma$VH_ = libraw_panasonic_makernotes_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("gamma"));
    static final java.lang.invoke.VarHandle libraw_panasonic_makernotes_t$gamma$VH() { return libraw_panasonic_makernotes_t$gamma$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("FocusMode"),
        C_SHORT.withName("AFPointSelected"),
        C_INT.withName("AFPointsInFocus"),
        C_SHORT.withName("FocusPosition"),
        MemoryLayout.ofSequence(4, C_CHAR).withName("DriveMode"),
        C_SHORT.withName("AFAdjustment"),
        C_CHAR.withName("MultiExposure"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("Quality")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$struct$LAYOUT() { return libraw_pentax_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_pentax_makernotes_t$FocusMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$FocusMode$LAYOUT() { return libraw_pentax_makernotes_t$FocusMode$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$FocusMode$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FocusMode"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$FocusMode$VH() { return libraw_pentax_makernotes_t$FocusMode$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$AFPointSelected$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$AFPointSelected$LAYOUT() { return libraw_pentax_makernotes_t$AFPointSelected$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$AFPointSelected$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPointSelected"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$AFPointSelected$VH() { return libraw_pentax_makernotes_t$AFPointSelected$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$AFPointsInFocus$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$AFPointsInFocus$LAYOUT() { return libraw_pentax_makernotes_t$AFPointsInFocus$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$AFPointsInFocus$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AFPointsInFocus"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$AFPointsInFocus$VH() { return libraw_pentax_makernotes_t$AFPointsInFocus$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$FocusPosition$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$FocusPosition$LAYOUT() { return libraw_pentax_makernotes_t$FocusPosition$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$FocusPosition$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FocusPosition"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$FocusPosition$VH() { return libraw_pentax_makernotes_t$FocusPosition$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$AFAdjustment$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$AFAdjustment$LAYOUT() { return libraw_pentax_makernotes_t$AFAdjustment$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$AFAdjustment$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAdjustment"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$AFAdjustment$VH() { return libraw_pentax_makernotes_t$AFAdjustment$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$MultiExposure$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$MultiExposure$LAYOUT() { return libraw_pentax_makernotes_t$MultiExposure$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$MultiExposure$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("MultiExposure"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$MultiExposure$VH() { return libraw_pentax_makernotes_t$MultiExposure$VH_; }

    static final MemoryLayout libraw_pentax_makernotes_t$Quality$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_pentax_makernotes_t$Quality$LAYOUT() { return libraw_pentax_makernotes_t$Quality$LAYOUT_; }

    static final VarHandle libraw_pentax_makernotes_t$Quality$VH_ = libraw_pentax_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("Quality"));
    static final java.lang.invoke.VarHandle libraw_pentax_makernotes_t$Quality$VH() { return libraw_pentax_makernotes_t$Quality$VH_; }

    static final MemoryLayout libraw_samsung_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_INT).withName("ImageSizeFull"),
        MemoryLayout.ofSequence(4, C_INT).withName("ImageSizeCrop"),
        MemoryLayout.ofSequence(2, C_INT).withName("ColorSpace"),
        MemoryLayout.ofSequence(11, C_INT).withName("key"),
        MemoryLayout.ofPaddingBits(32),
        C_DOUBLE.withName("DigitalGain"),
        C_INT.withName("DeviceType"),
        MemoryLayout.ofSequence(32, C_CHAR).withName("LensFirmware"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_samsung_makernotes_t$struct$LAYOUT() { return libraw_samsung_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_samsung_makernotes_t$DigitalGain$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout libraw_samsung_makernotes_t$DigitalGain$LAYOUT() { return libraw_samsung_makernotes_t$DigitalGain$LAYOUT_; }

    static final VarHandle libraw_samsung_makernotes_t$DigitalGain$VH_ = libraw_samsung_makernotes_t$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("DigitalGain"));
    static final java.lang.invoke.VarHandle libraw_samsung_makernotes_t$DigitalGain$VH() { return libraw_samsung_makernotes_t$DigitalGain$VH_; }

    static final MemoryLayout libraw_samsung_makernotes_t$DeviceType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_samsung_makernotes_t$DeviceType$LAYOUT() { return libraw_samsung_makernotes_t$DeviceType$LAYOUT_; }

    static final VarHandle libraw_samsung_makernotes_t$DeviceType$VH_ = libraw_samsung_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("DeviceType"));
    static final java.lang.invoke.VarHandle libraw_samsung_makernotes_t$DeviceType$VH() { return libraw_samsung_makernotes_t$DeviceType$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("BlackLevelTop"),
        C_SHORT.withName("BlackLevelBottom"),
        C_SHORT.withName("offset_left"),
        C_SHORT.withName("offset_top"),
        C_SHORT.withName("clipBlack"),
        C_SHORT.withName("clipWhite"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camDaylight"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camTungsten"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camFluorescent"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camFlash"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camCustom"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(3, C_FLOAT)).withName("romm_camAuto"),
        C_SHORT.withName("val018percent"),
        C_SHORT.withName("val100percent"),
        C_SHORT.withName("val170percent"),
        C_SHORT.withName("MakerNoteKodak8a"),
        C_FLOAT.withName("ISOCalibrationGain"),
        C_FLOAT.withName("AnalogISO")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$struct$LAYOUT() { return libraw_kodak_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_kodak_makernotes_t$BlackLevelTop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$BlackLevelTop$LAYOUT() { return libraw_kodak_makernotes_t$BlackLevelTop$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$BlackLevelTop$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackLevelTop"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$BlackLevelTop$VH() { return libraw_kodak_makernotes_t$BlackLevelTop$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$BlackLevelBottom$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$BlackLevelBottom$LAYOUT() { return libraw_kodak_makernotes_t$BlackLevelBottom$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$BlackLevelBottom$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("BlackLevelBottom"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$BlackLevelBottom$VH() { return libraw_kodak_makernotes_t$BlackLevelBottom$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$offset_left$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$offset_left$LAYOUT() { return libraw_kodak_makernotes_t$offset_left$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$offset_left$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("offset_left"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$offset_left$VH() { return libraw_kodak_makernotes_t$offset_left$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$offset_top$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$offset_top$LAYOUT() { return libraw_kodak_makernotes_t$offset_top$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$offset_top$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("offset_top"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$offset_top$VH() { return libraw_kodak_makernotes_t$offset_top$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$clipBlack$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$clipBlack$LAYOUT() { return libraw_kodak_makernotes_t$clipBlack$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$clipBlack$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("clipBlack"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$clipBlack$VH() { return libraw_kodak_makernotes_t$clipBlack$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$clipWhite$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$clipWhite$LAYOUT() { return libraw_kodak_makernotes_t$clipWhite$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$clipWhite$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("clipWhite"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$clipWhite$VH() { return libraw_kodak_makernotes_t$clipWhite$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$val018percent$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$val018percent$LAYOUT() { return libraw_kodak_makernotes_t$val018percent$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$val018percent$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("val018percent"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$val018percent$VH() { return libraw_kodak_makernotes_t$val018percent$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$val100percent$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$val100percent$LAYOUT() { return libraw_kodak_makernotes_t$val100percent$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$val100percent$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("val100percent"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$val100percent$VH() { return libraw_kodak_makernotes_t$val100percent$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$val170percent$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$val170percent$LAYOUT() { return libraw_kodak_makernotes_t$val170percent$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$val170percent$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("val170percent"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$val170percent$VH() { return libraw_kodak_makernotes_t$val170percent$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$MakerNoteKodak8a$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$MakerNoteKodak8a$LAYOUT() { return libraw_kodak_makernotes_t$MakerNoteKodak8a$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$MakerNoteKodak8a$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MakerNoteKodak8a"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$MakerNoteKodak8a$VH() { return libraw_kodak_makernotes_t$MakerNoteKodak8a$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$ISOCalibrationGain$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$ISOCalibrationGain$LAYOUT() { return libraw_kodak_makernotes_t$ISOCalibrationGain$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$ISOCalibrationGain$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("ISOCalibrationGain"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$ISOCalibrationGain$VH() { return libraw_kodak_makernotes_t$ISOCalibrationGain$VH_; }

    static final MemoryLayout libraw_kodak_makernotes_t$AnalogISO$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_kodak_makernotes_t$AnalogISO$LAYOUT() { return libraw_kodak_makernotes_t$AnalogISO$LAYOUT_; }

    static final VarHandle libraw_kodak_makernotes_t$AnalogISO$VH_ = libraw_kodak_makernotes_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("AnalogISO"));
    static final java.lang.invoke.VarHandle libraw_kodak_makernotes_t$AnalogISO$VH() { return libraw_kodak_makernotes_t$AnalogISO$VH_; }

    static final MemoryLayout libraw_p1_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(64, C_CHAR).withName("Software"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("SystemType"),
        MemoryLayout.ofSequence(256, C_CHAR).withName("FirmwareString"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("SystemModel")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_p1_makernotes_t$struct$LAYOUT() { return libraw_p1_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_sony_info_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("CameraType"),
        C_CHAR.withName("Sony0x9400_version"),
        C_CHAR.withName("Sony0x9400_ReleaseMode2"),
        C_INT.withName("Sony0x9400_SequenceImageNumber"),
        C_CHAR.withName("Sony0x9400_SequenceLength1"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("Sony0x9400_SequenceFileNumber"),
        C_CHAR.withName("Sony0x9400_SequenceLength2"),
        C_CHAR.withName("AFAreaModeSetting"),
        MemoryLayout.ofSequence(2, C_SHORT).withName("FlexibleSpotPosition"),
        C_CHAR.withName("AFPointSelected"),
        MemoryLayout.ofSequence(10, C_CHAR).withName("AFPointsUsed"),
        C_CHAR.withName("AFTracking"),
        C_CHAR.withName("AFType"),
        MemoryLayout.ofPaddingBits(8),
        MemoryLayout.ofSequence(4, C_SHORT).withName("FocusLocation"),
        C_CHAR.withName("AFMicroAdjValue"),
        C_CHAR.withName("AFMicroAdjOn"),
        C_CHAR.withName("AFMicroAdjRegisteredLenses"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("VariableLowPassFilter"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("LongExposureNoiseReduction"),
        C_SHORT.withName("HighISONoiseReduction"),
        MemoryLayout.ofSequence(2, C_SHORT).withName("HDR"),
        C_SHORT.withName("group2010"),
        C_SHORT.withName("real_iso_offset"),
        C_SHORT.withName("MeteringMode_offset"),
        C_SHORT.withName("ExposureProgram_offset"),
        C_SHORT.withName("ReleaseMode2_offset"),
        C_INT.withName("MinoltaCamID"),
        C_FLOAT.withName("firmware"),
        C_SHORT.withName("ImageCount3_offset"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("ImageCount3"),
        C_INT.withName("ElectronicFrontCurtainShutter"),
        C_SHORT.withName("MeteringMode2"),
        MemoryLayout.ofSequence(20, C_CHAR).withName("SonyDateTime"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("ShotNumberSincePowerUp"),
        C_SHORT.withName("PixelShiftGroupPrefix"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("PixelShiftGroupID"),
        C_CHAR.withName("nShotsInPixelShiftGroup"),
        C_CHAR.withName("numInPixelShiftGroup"),
        C_SHORT.withName("prd_ImageHeight"),
        C_SHORT.withName("prd_ImageWidth"),
        C_SHORT.withName("prd_RawBitDepth"),
        C_SHORT.withName("prd_StorageMethod"),
        C_SHORT.withName("prd_BayerPattern"),
        C_SHORT.withName("SonyRawFileType"),
        C_SHORT.withName("RAWFileType"),
        C_INT.withName("Quality"),
        C_SHORT.withName("FileFormat"),
        MemoryLayout.ofPaddingBits(16)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$struct$LAYOUT() { return libraw_sony_info_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_sony_info_t$CameraType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$CameraType$LAYOUT() { return libraw_sony_info_t$CameraType$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$CameraType$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("CameraType"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$CameraType$VH() { return libraw_sony_info_t$CameraType$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_version$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_version$LAYOUT() { return libraw_sony_info_t$Sony0x9400_version$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_version$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Sony0x9400_version"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_version$VH() { return libraw_sony_info_t$Sony0x9400_version$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_ReleaseMode2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_ReleaseMode2$LAYOUT() { return libraw_sony_info_t$Sony0x9400_ReleaseMode2$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_ReleaseMode2$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Sony0x9400_ReleaseMode2"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_ReleaseMode2$VH() { return libraw_sony_info_t$Sony0x9400_ReleaseMode2$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceImageNumber$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceImageNumber$LAYOUT() { return libraw_sony_info_t$Sony0x9400_SequenceImageNumber$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_SequenceImageNumber$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Sony0x9400_SequenceImageNumber"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_SequenceImageNumber$VH() { return libraw_sony_info_t$Sony0x9400_SequenceImageNumber$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceLength1$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceLength1$LAYOUT() { return libraw_sony_info_t$Sony0x9400_SequenceLength1$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_SequenceLength1$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Sony0x9400_SequenceLength1"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_SequenceLength1$VH() { return libraw_sony_info_t$Sony0x9400_SequenceLength1$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceFileNumber$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceFileNumber$LAYOUT() { return libraw_sony_info_t$Sony0x9400_SequenceFileNumber$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_SequenceFileNumber$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Sony0x9400_SequenceFileNumber"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_SequenceFileNumber$VH() { return libraw_sony_info_t$Sony0x9400_SequenceFileNumber$VH_; }

    static final MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceLength2$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Sony0x9400_SequenceLength2$LAYOUT() { return libraw_sony_info_t$Sony0x9400_SequenceLength2$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Sony0x9400_SequenceLength2$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("Sony0x9400_SequenceLength2"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Sony0x9400_SequenceLength2$VH() { return libraw_sony_info_t$Sony0x9400_SequenceLength2$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFAreaModeSetting$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFAreaModeSetting$LAYOUT() { return libraw_sony_info_t$AFAreaModeSetting$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFAreaModeSetting$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFAreaModeSetting"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFAreaModeSetting$VH() { return libraw_sony_info_t$AFAreaModeSetting$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFPointSelected$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFPointSelected$LAYOUT() { return libraw_sony_info_t$AFPointSelected$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFPointSelected$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFPointSelected"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFPointSelected$VH() { return libraw_sony_info_t$AFPointSelected$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFTracking$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFTracking$LAYOUT() { return libraw_sony_info_t$AFTracking$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFTracking$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFTracking"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFTracking$VH() { return libraw_sony_info_t$AFTracking$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFType$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFType$LAYOUT() { return libraw_sony_info_t$AFType$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFType$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFType"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFType$VH() { return libraw_sony_info_t$AFType$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFMicroAdjValue$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFMicroAdjValue$LAYOUT() { return libraw_sony_info_t$AFMicroAdjValue$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFMicroAdjValue$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFMicroAdjValue"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFMicroAdjValue$VH() { return libraw_sony_info_t$AFMicroAdjValue$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFMicroAdjOn$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFMicroAdjOn$LAYOUT() { return libraw_sony_info_t$AFMicroAdjOn$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFMicroAdjOn$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFMicroAdjOn"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFMicroAdjOn$VH() { return libraw_sony_info_t$AFMicroAdjOn$VH_; }

    static final MemoryLayout libraw_sony_info_t$AFMicroAdjRegisteredLenses$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$AFMicroAdjRegisteredLenses$LAYOUT() { return libraw_sony_info_t$AFMicroAdjRegisteredLenses$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$AFMicroAdjRegisteredLenses$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("AFMicroAdjRegisteredLenses"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$AFMicroAdjRegisteredLenses$VH() { return libraw_sony_info_t$AFMicroAdjRegisteredLenses$VH_; }

    static final MemoryLayout libraw_sony_info_t$VariableLowPassFilter$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$VariableLowPassFilter$LAYOUT() { return libraw_sony_info_t$VariableLowPassFilter$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$VariableLowPassFilter$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("VariableLowPassFilter"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$VariableLowPassFilter$VH() { return libraw_sony_info_t$VariableLowPassFilter$VH_; }

    static final MemoryLayout libraw_sony_info_t$LongExposureNoiseReduction$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$LongExposureNoiseReduction$LAYOUT() { return libraw_sony_info_t$LongExposureNoiseReduction$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$LongExposureNoiseReduction$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("LongExposureNoiseReduction"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$LongExposureNoiseReduction$VH() { return libraw_sony_info_t$LongExposureNoiseReduction$VH_; }

    static final MemoryLayout libraw_sony_info_t$HighISONoiseReduction$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$HighISONoiseReduction$LAYOUT() { return libraw_sony_info_t$HighISONoiseReduction$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$HighISONoiseReduction$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("HighISONoiseReduction"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$HighISONoiseReduction$VH() { return libraw_sony_info_t$HighISONoiseReduction$VH_; }

    static final MemoryLayout libraw_sony_info_t$group2010$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$group2010$LAYOUT() { return libraw_sony_info_t$group2010$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$group2010$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("group2010"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$group2010$VH() { return libraw_sony_info_t$group2010$VH_; }

    static final MemoryLayout libraw_sony_info_t$real_iso_offset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$real_iso_offset$LAYOUT() { return libraw_sony_info_t$real_iso_offset$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$real_iso_offset$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("real_iso_offset"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$real_iso_offset$VH() { return libraw_sony_info_t$real_iso_offset$VH_; }

    static final MemoryLayout libraw_sony_info_t$MeteringMode_offset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$MeteringMode_offset$LAYOUT() { return libraw_sony_info_t$MeteringMode_offset$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$MeteringMode_offset$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MeteringMode_offset"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$MeteringMode_offset$VH() { return libraw_sony_info_t$MeteringMode_offset$VH_; }

    static final MemoryLayout libraw_sony_info_t$ExposureProgram_offset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ExposureProgram_offset$LAYOUT() { return libraw_sony_info_t$ExposureProgram_offset$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ExposureProgram_offset$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ExposureProgram_offset"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ExposureProgram_offset$VH() { return libraw_sony_info_t$ExposureProgram_offset$VH_; }

    static final MemoryLayout libraw_sony_info_t$ReleaseMode2_offset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ReleaseMode2_offset$LAYOUT() { return libraw_sony_info_t$ReleaseMode2_offset$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ReleaseMode2_offset$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ReleaseMode2_offset"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ReleaseMode2_offset$VH() { return libraw_sony_info_t$ReleaseMode2_offset$VH_; }

    static final MemoryLayout libraw_sony_info_t$MinoltaCamID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$MinoltaCamID$LAYOUT() { return libraw_sony_info_t$MinoltaCamID$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$MinoltaCamID$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("MinoltaCamID"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$MinoltaCamID$VH() { return libraw_sony_info_t$MinoltaCamID$VH_; }

    static final MemoryLayout libraw_sony_info_t$firmware$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$firmware$LAYOUT() { return libraw_sony_info_t$firmware$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$firmware$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("firmware"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$firmware$VH() { return libraw_sony_info_t$firmware$VH_; }

    static final MemoryLayout libraw_sony_info_t$ImageCount3_offset$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ImageCount3_offset$LAYOUT() { return libraw_sony_info_t$ImageCount3_offset$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ImageCount3_offset$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ImageCount3_offset"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ImageCount3_offset$VH() { return libraw_sony_info_t$ImageCount3_offset$VH_; }

    static final MemoryLayout libraw_sony_info_t$ImageCount3$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ImageCount3$LAYOUT() { return libraw_sony_info_t$ImageCount3$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ImageCount3$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ImageCount3"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ImageCount3$VH() { return libraw_sony_info_t$ImageCount3$VH_; }

    static final MemoryLayout libraw_sony_info_t$ElectronicFrontCurtainShutter$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ElectronicFrontCurtainShutter$LAYOUT() { return libraw_sony_info_t$ElectronicFrontCurtainShutter$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ElectronicFrontCurtainShutter$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ElectronicFrontCurtainShutter"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ElectronicFrontCurtainShutter$VH() { return libraw_sony_info_t$ElectronicFrontCurtainShutter$VH_; }

    static final MemoryLayout libraw_sony_info_t$MeteringMode2$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$MeteringMode2$LAYOUT() { return libraw_sony_info_t$MeteringMode2$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$MeteringMode2$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MeteringMode2"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$MeteringMode2$VH() { return libraw_sony_info_t$MeteringMode2$VH_; }

    static final MemoryLayout libraw_sony_info_t$ShotNumberSincePowerUp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$ShotNumberSincePowerUp$LAYOUT() { return libraw_sony_info_t$ShotNumberSincePowerUp$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$ShotNumberSincePowerUp$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ShotNumberSincePowerUp"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$ShotNumberSincePowerUp$VH() { return libraw_sony_info_t$ShotNumberSincePowerUp$VH_; }

    static final MemoryLayout libraw_sony_info_t$PixelShiftGroupPrefix$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$PixelShiftGroupPrefix$LAYOUT() { return libraw_sony_info_t$PixelShiftGroupPrefix$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$PixelShiftGroupPrefix$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("PixelShiftGroupPrefix"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$PixelShiftGroupPrefix$VH() { return libraw_sony_info_t$PixelShiftGroupPrefix$VH_; }

    static final MemoryLayout libraw_sony_info_t$PixelShiftGroupID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$PixelShiftGroupID$LAYOUT() { return libraw_sony_info_t$PixelShiftGroupID$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$PixelShiftGroupID$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("PixelShiftGroupID"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$PixelShiftGroupID$VH() { return libraw_sony_info_t$PixelShiftGroupID$VH_; }

    static final MemoryLayout libraw_sony_info_t$nShotsInPixelShiftGroup$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$nShotsInPixelShiftGroup$LAYOUT() { return libraw_sony_info_t$nShotsInPixelShiftGroup$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$nShotsInPixelShiftGroup$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("nShotsInPixelShiftGroup"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$nShotsInPixelShiftGroup$VH() { return libraw_sony_info_t$nShotsInPixelShiftGroup$VH_; }

    static final MemoryLayout libraw_sony_info_t$numInPixelShiftGroup$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$numInPixelShiftGroup$LAYOUT() { return libraw_sony_info_t$numInPixelShiftGroup$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$numInPixelShiftGroup$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("numInPixelShiftGroup"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$numInPixelShiftGroup$VH() { return libraw_sony_info_t$numInPixelShiftGroup$VH_; }

    static final MemoryLayout libraw_sony_info_t$prd_ImageHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$prd_ImageHeight$LAYOUT() { return libraw_sony_info_t$prd_ImageHeight$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$prd_ImageHeight$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("prd_ImageHeight"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$prd_ImageHeight$VH() { return libraw_sony_info_t$prd_ImageHeight$VH_; }

    static final MemoryLayout libraw_sony_info_t$prd_ImageWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$prd_ImageWidth$LAYOUT() { return libraw_sony_info_t$prd_ImageWidth$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$prd_ImageWidth$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("prd_ImageWidth"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$prd_ImageWidth$VH() { return libraw_sony_info_t$prd_ImageWidth$VH_; }

    static final MemoryLayout libraw_sony_info_t$prd_RawBitDepth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$prd_RawBitDepth$LAYOUT() { return libraw_sony_info_t$prd_RawBitDepth$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$prd_RawBitDepth$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("prd_RawBitDepth"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$prd_RawBitDepth$VH() { return libraw_sony_info_t$prd_RawBitDepth$VH_; }

    static final MemoryLayout libraw_sony_info_t$prd_StorageMethod$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$prd_StorageMethod$LAYOUT() { return libraw_sony_info_t$prd_StorageMethod$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$prd_StorageMethod$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("prd_StorageMethod"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$prd_StorageMethod$VH() { return libraw_sony_info_t$prd_StorageMethod$VH_; }

    static final MemoryLayout libraw_sony_info_t$prd_BayerPattern$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$prd_BayerPattern$LAYOUT() { return libraw_sony_info_t$prd_BayerPattern$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$prd_BayerPattern$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("prd_BayerPattern"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$prd_BayerPattern$VH() { return libraw_sony_info_t$prd_BayerPattern$VH_; }

    static final MemoryLayout libraw_sony_info_t$SonyRawFileType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$SonyRawFileType$LAYOUT() { return libraw_sony_info_t$SonyRawFileType$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$SonyRawFileType$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SonyRawFileType"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$SonyRawFileType$VH() { return libraw_sony_info_t$SonyRawFileType$VH_; }

    static final MemoryLayout libraw_sony_info_t$RAWFileType$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$RAWFileType$LAYOUT() { return libraw_sony_info_t$RAWFileType$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$RAWFileType$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("RAWFileType"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$RAWFileType$VH() { return libraw_sony_info_t$RAWFileType$VH_; }

    static final MemoryLayout libraw_sony_info_t$Quality$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$Quality$LAYOUT() { return libraw_sony_info_t$Quality$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$Quality$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("Quality"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$Quality$VH() { return libraw_sony_info_t$Quality$VH_; }

    static final MemoryLayout libraw_sony_info_t$FileFormat$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_sony_info_t$FileFormat$LAYOUT() { return libraw_sony_info_t$FileFormat$LAYOUT_; }

    static final VarHandle libraw_sony_info_t$FileFormat$VH_ = libraw_sony_info_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FileFormat"));
    static final java.lang.invoke.VarHandle libraw_sony_info_t$FileFormat$VH() { return libraw_sony_info_t$FileFormat$VH_; }

    static final MemoryLayout libraw_colordata_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(65536, C_SHORT).withName("curve"),
        MemoryLayout.ofSequence(4104, C_INT).withName("cblack"),
        C_INT.withName("black"),
        C_INT.withName("data_maximum"),
        C_INT.withName("maximum"),
        MemoryLayout.ofSequence(4, C_LONG).withName("linear_max"),
        C_FLOAT.withName("fmaximum"),
        C_FLOAT.withName("fnorm"),
        MemoryLayout.ofSequence(8, MemoryLayout.ofSequence(8, C_SHORT)).withName("white"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("cam_mul"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("pre_mul"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("cmatrix"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("ccm"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("rgb_cam"),
        MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, C_FLOAT)).withName("cam_xyz"),
        MemoryLayout.ofStruct(
            C_INT.withName("format"),
            C_INT.withName("key_off"),
            C_INT.withName("tag_21a"),
            C_INT.withName("t_black"),
            C_INT.withName("split_col"),
            C_INT.withName("black_col"),
            C_INT.withName("split_row"),
            C_INT.withName("black_row"),
            C_FLOAT.withName("tag_210")
        ).withName("phase_one_data"),
        C_FLOAT.withName("flash_used"),
        C_FLOAT.withName("canon_ev"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("model2"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("UniqueCameraModel"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("LocalizedCameraModel"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("ImageUniqueID"),
        MemoryLayout.ofSequence(17, C_CHAR).withName("RawDataUniqueID"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("OriginalRawFileName"),
        MemoryLayout.ofPaddingBits(56),
        C_POINTER.withName("profile"),
        C_INT.withName("profile_length"),
        MemoryLayout.ofSequence(8, C_INT).withName("black_stat"),
        MemoryLayout.ofSequence(2, MemoryLayout.ofStruct(
            C_INT.withName("parsedfields"),
            C_SHORT.withName("illuminant"),
            MemoryLayout.ofPaddingBits(16),
            MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(4, C_FLOAT)).withName("calibration"),
            MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, C_FLOAT)).withName("colormatrix"),
            MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("forwardmatrix")
        )).withName("dng_color"),
        MemoryLayout.ofStruct(
            C_INT.withName("parsedfields"),
            MemoryLayout.ofSequence(4104, C_INT).withName("dng_cblack"),
            C_INT.withName("dng_black"),
            MemoryLayout.ofSequence(4104, C_FLOAT).withName("dng_fcblack"),
            C_FLOAT.withName("dng_fblack"),
            MemoryLayout.ofSequence(4, C_INT).withName("dng_whitelevel"),
            MemoryLayout.ofSequence(4, C_INT).withName("default_crop"),
            C_INT.withName("preview_colorspace"),
            MemoryLayout.ofSequence(4, C_FLOAT).withName("analogbalance"),
            MemoryLayout.ofSequence(4, C_FLOAT).withName("asshotneutral"),
            C_FLOAT.withName("baseline_exposure"),
            C_FLOAT.withName("LinearResponseLimit")
        ).withName("dng_levels"),
        MemoryLayout.ofSequence(256, MemoryLayout.ofSequence(4, C_INT)).withName("WB_Coeffs"),
        MemoryLayout.ofSequence(64, MemoryLayout.ofSequence(5, C_FLOAT)).withName("WBCT_Coeffs"),
        C_INT.withName("as_shot_wb_applied"),
        MemoryLayout.ofSequence(2, MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(9, C_FLOAT).withName("romm_cam")
        )).withName("P1_color"),
        C_INT.withName("raw_bps"),
        C_INT.withName("ExifColorSpace")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$struct$LAYOUT() { return libraw_colordata_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_colordata_t$black$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$black$LAYOUT() { return libraw_colordata_t$black$LAYOUT_; }

    static final VarHandle libraw_colordata_t$black$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("black"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$black$VH() { return libraw_colordata_t$black$VH_; }

    static final MemoryLayout libraw_colordata_t$data_maximum$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$data_maximum$LAYOUT() { return libraw_colordata_t$data_maximum$LAYOUT_; }

    static final VarHandle libraw_colordata_t$data_maximum$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("data_maximum"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$data_maximum$VH() { return libraw_colordata_t$data_maximum$VH_; }

    static final MemoryLayout libraw_colordata_t$maximum$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$maximum$LAYOUT() { return libraw_colordata_t$maximum$LAYOUT_; }

    static final VarHandle libraw_colordata_t$maximum$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("maximum"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$maximum$VH() { return libraw_colordata_t$maximum$VH_; }

    static final MemoryLayout libraw_colordata_t$fmaximum$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$fmaximum$LAYOUT() { return libraw_colordata_t$fmaximum$LAYOUT_; }

    static final VarHandle libraw_colordata_t$fmaximum$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fmaximum"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$fmaximum$VH() { return libraw_colordata_t$fmaximum$VH_; }

    static final MemoryLayout libraw_colordata_t$fnorm$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$fnorm$LAYOUT() { return libraw_colordata_t$fnorm$LAYOUT_; }

    static final VarHandle libraw_colordata_t$fnorm$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("fnorm"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$fnorm$VH() { return libraw_colordata_t$fnorm$VH_; }

    static final MemoryLayout libraw_colordata_t$flash_used$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$flash_used$LAYOUT() { return libraw_colordata_t$flash_used$LAYOUT_; }

    static final VarHandle libraw_colordata_t$flash_used$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("flash_used"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$flash_used$VH() { return libraw_colordata_t$flash_used$VH_; }

    static final MemoryLayout libraw_colordata_t$canon_ev$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$canon_ev$LAYOUT() { return libraw_colordata_t$canon_ev$LAYOUT_; }

    static final VarHandle libraw_colordata_t$canon_ev$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("canon_ev"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$canon_ev$VH() { return libraw_colordata_t$canon_ev$VH_; }

    static final MemoryLayout libraw_colordata_t$profile$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$profile$LAYOUT() { return libraw_colordata_t$profile$LAYOUT_; }

    static final VarHandle libraw_colordata_t$profile$VH_ = MemoryHandles.asAddressVarHandle(libraw_colordata_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("profile")));
    static final java.lang.invoke.VarHandle libraw_colordata_t$profile$VH() { return libraw_colordata_t$profile$VH_; }

    static final MemoryLayout libraw_colordata_t$profile_length$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$profile_length$LAYOUT() { return libraw_colordata_t$profile_length$LAYOUT_; }

    static final VarHandle libraw_colordata_t$profile_length$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("profile_length"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$profile_length$VH() { return libraw_colordata_t$profile_length$VH_; }

    static final MemoryLayout libraw_colordata_t$as_shot_wb_applied$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$as_shot_wb_applied$LAYOUT() { return libraw_colordata_t$as_shot_wb_applied$LAYOUT_; }

    static final VarHandle libraw_colordata_t$as_shot_wb_applied$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("as_shot_wb_applied"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$as_shot_wb_applied$VH() { return libraw_colordata_t$as_shot_wb_applied$VH_; }

    static final MemoryLayout libraw_colordata_t$raw_bps$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$raw_bps$LAYOUT() { return libraw_colordata_t$raw_bps$LAYOUT_; }

    static final VarHandle libraw_colordata_t$raw_bps$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("raw_bps"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$raw_bps$VH() { return libraw_colordata_t$raw_bps$VH_; }

    static final MemoryLayout libraw_colordata_t$ExifColorSpace$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_colordata_t$ExifColorSpace$LAYOUT() { return libraw_colordata_t$ExifColorSpace$LAYOUT_; }

    static final VarHandle libraw_colordata_t$ExifColorSpace$VH_ = libraw_colordata_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ExifColorSpace"));
    static final java.lang.invoke.VarHandle libraw_colordata_t$ExifColorSpace$VH() { return libraw_colordata_t$ExifColorSpace$VH_; }

    static final MemoryLayout libraw_thumbnail_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("tformat"),
        C_SHORT.withName("twidth"),
        C_SHORT.withName("theight"),
        C_INT.withName("tlength"),
        C_INT.withName("tcolors"),
        C_POINTER.withName("thumb")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$struct$LAYOUT() { return libraw_thumbnail_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_thumbnail_t$tformat$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$tformat$LAYOUT() { return libraw_thumbnail_t$tformat$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$tformat$VH_ = libraw_thumbnail_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tformat"));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$tformat$VH() { return libraw_thumbnail_t$tformat$VH_; }

    static final MemoryLayout libraw_thumbnail_t$twidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$twidth$LAYOUT() { return libraw_thumbnail_t$twidth$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$twidth$VH_ = libraw_thumbnail_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("twidth"));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$twidth$VH() { return libraw_thumbnail_t$twidth$VH_; }

    static final MemoryLayout libraw_thumbnail_t$theight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$theight$LAYOUT() { return libraw_thumbnail_t$theight$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$theight$VH_ = libraw_thumbnail_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("theight"));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$theight$VH() { return libraw_thumbnail_t$theight$VH_; }

    static final MemoryLayout libraw_thumbnail_t$tlength$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$tlength$LAYOUT() { return libraw_thumbnail_t$tlength$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$tlength$VH_ = libraw_thumbnail_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tlength"));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$tlength$VH() { return libraw_thumbnail_t$tlength$VH_; }

    static final MemoryLayout libraw_thumbnail_t$tcolors$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$tcolors$LAYOUT() { return libraw_thumbnail_t$tcolors$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$tcolors$VH_ = libraw_thumbnail_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tcolors"));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$tcolors$VH() { return libraw_thumbnail_t$tcolors$VH_; }

    static final MemoryLayout libraw_thumbnail_t$thumb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_thumbnail_t$thumb$LAYOUT() { return libraw_thumbnail_t$thumb$LAYOUT_; }

    static final VarHandle libraw_thumbnail_t$thumb$VH_ = MemoryHandles.asAddressVarHandle(libraw_thumbnail_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("thumb")));
    static final java.lang.invoke.VarHandle libraw_thumbnail_t$thumb$VH() { return libraw_thumbnail_t$thumb$VH_; }

    static final MemoryLayout libraw_gps_info_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(3, C_FLOAT).withName("latitude"),
        MemoryLayout.ofSequence(3, C_FLOAT).withName("longitude"),
        MemoryLayout.ofSequence(3, C_FLOAT).withName("gpstimestamp"),
        C_FLOAT.withName("altitude"),
        C_CHAR.withName("altref"),
        C_CHAR.withName("latref"),
        C_CHAR.withName("longref"),
        C_CHAR.withName("gpsstatus"),
        C_CHAR.withName("gpsparsed"),
        MemoryLayout.ofPaddingBits(24)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$struct$LAYOUT() { return libraw_gps_info_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_gps_info_t$altitude$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$altitude$LAYOUT() { return libraw_gps_info_t$altitude$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$altitude$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("altitude"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$altitude$VH() { return libraw_gps_info_t$altitude$VH_; }

    static final MemoryLayout libraw_gps_info_t$altref$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$altref$LAYOUT() { return libraw_gps_info_t$altref$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$altref$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("altref"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$altref$VH() { return libraw_gps_info_t$altref$VH_; }

    static final MemoryLayout libraw_gps_info_t$latref$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$latref$LAYOUT() { return libraw_gps_info_t$latref$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$latref$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("latref"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$latref$VH() { return libraw_gps_info_t$latref$VH_; }

    static final MemoryLayout libraw_gps_info_t$longref$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$longref$LAYOUT() { return libraw_gps_info_t$longref$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$longref$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("longref"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$longref$VH() { return libraw_gps_info_t$longref$VH_; }

    static final MemoryLayout libraw_gps_info_t$gpsstatus$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$gpsstatus$LAYOUT() { return libraw_gps_info_t$gpsstatus$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$gpsstatus$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("gpsstatus"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$gpsstatus$VH() { return libraw_gps_info_t$gpsstatus$VH_; }

    static final MemoryLayout libraw_gps_info_t$gpsparsed$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_gps_info_t$gpsparsed$LAYOUT() { return libraw_gps_info_t$gpsparsed$LAYOUT_; }

    static final VarHandle libraw_gps_info_t$gpsparsed$VH_ = libraw_gps_info_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("gpsparsed"));
    static final java.lang.invoke.VarHandle libraw_gps_info_t$gpsparsed$VH() { return libraw_gps_info_t$gpsparsed$VH_; }

    static final MemoryLayout libraw_imgother_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_FLOAT.withName("iso_speed"),
        C_FLOAT.withName("shutter"),
        C_FLOAT.withName("aperture"),
        C_FLOAT.withName("focal_len"),
        C_LONG_LONG.withName("timestamp"),
        C_INT.withName("shot_order"),
        MemoryLayout.ofSequence(32, C_INT).withName("gpsdata"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(3, C_FLOAT).withName("latitude"),
            MemoryLayout.ofSequence(3, C_FLOAT).withName("longitude"),
            MemoryLayout.ofSequence(3, C_FLOAT).withName("gpstimestamp"),
            C_FLOAT.withName("altitude"),
            C_CHAR.withName("altref"),
            C_CHAR.withName("latref"),
            C_CHAR.withName("longref"),
            C_CHAR.withName("gpsstatus"),
            C_CHAR.withName("gpsparsed"),
            MemoryLayout.ofPaddingBits(24)
        ).withName("parsed_gps"),
        MemoryLayout.ofSequence(512, C_CHAR).withName("desc"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("artist"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("analogbalance"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_imgother_t$struct$LAYOUT() { return libraw_imgother_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_imgother_t$iso_speed$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_imgother_t$iso_speed$LAYOUT() { return libraw_imgother_t$iso_speed$LAYOUT_; }

    static final VarHandle libraw_imgother_t$iso_speed$VH_ = libraw_imgother_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("iso_speed"));
    static final java.lang.invoke.VarHandle libraw_imgother_t$iso_speed$VH() { return libraw_imgother_t$iso_speed$VH_; }

    static final MemoryLayout libraw_imgother_t$shutter$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_imgother_t$shutter$LAYOUT() { return libraw_imgother_t$shutter$LAYOUT_; }

    static final VarHandle libraw_imgother_t$shutter$VH_ = libraw_imgother_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("shutter"));
    static final java.lang.invoke.VarHandle libraw_imgother_t$shutter$VH() { return libraw_imgother_t$shutter$VH_; }

}

