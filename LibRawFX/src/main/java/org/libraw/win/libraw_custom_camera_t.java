// Generated by jextract

package org.libraw.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct libraw_custom_camera_t {
 *     unsigned int fsize;
 *     unsigned short rw;
 *     unsigned short rh;
 *     unsigned char lm;
 *     unsigned char tm;
 *     unsigned char rm;
 *     unsigned char bm;
 *     unsigned short lf;
 *     unsigned char cf;
 *     unsigned char max;
 *     unsigned char flags;
 *     char t_make[10];
 *     char t_model[20];
 *     unsigned short offset;
 * };
 * }
 */
public class libraw_custom_camera_t {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("fsize"),
        Constants$root.C_SHORT$LAYOUT.withName("rw"),
        Constants$root.C_SHORT$LAYOUT.withName("rh"),
        Constants$root.C_CHAR$LAYOUT.withName("lm"),
        Constants$root.C_CHAR$LAYOUT.withName("tm"),
        Constants$root.C_CHAR$LAYOUT.withName("rm"),
        Constants$root.C_CHAR$LAYOUT.withName("bm"),
        Constants$root.C_SHORT$LAYOUT.withName("lf"),
        Constants$root.C_CHAR$LAYOUT.withName("cf"),
        Constants$root.C_CHAR$LAYOUT.withName("max"),
        Constants$root.C_CHAR$LAYOUT.withName("flags"),
        MemoryLayout.sequenceLayout(10, Constants$root.C_CHAR$LAYOUT).withName("t_make"),
        MemoryLayout.sequenceLayout(20, Constants$root.C_CHAR$LAYOUT).withName("t_model"),
        MemoryLayout.paddingLayout(8),
        Constants$root.C_SHORT$LAYOUT.withName("offset"),
        MemoryLayout.paddingLayout(16)
    ).withName("libraw_custom_camera_t");
    public static MemoryLayout $LAYOUT() {
        return libraw_custom_camera_t.$struct$LAYOUT;
    }
    static final VarHandle fsize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("fsize"));
    public static VarHandle fsize$VH() {
        return libraw_custom_camera_t.fsize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int fsize;
     * }
     */
    public static int fsize$get(MemorySegment seg) {
        return (int)libraw_custom_camera_t.fsize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int fsize;
     * }
     */
    public static void fsize$set(MemorySegment seg, int x) {
        libraw_custom_camera_t.fsize$VH.set(seg, x);
    }
    public static int fsize$get(MemorySegment seg, long index) {
        return (int)libraw_custom_camera_t.fsize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fsize$set(MemorySegment seg, long index, int x) {
        libraw_custom_camera_t.fsize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rw$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rw"));
    public static VarHandle rw$VH() {
        return libraw_custom_camera_t.rw$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short rw;
     * }
     */
    public static short rw$get(MemorySegment seg) {
        return (short)libraw_custom_camera_t.rw$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short rw;
     * }
     */
    public static void rw$set(MemorySegment seg, short x) {
        libraw_custom_camera_t.rw$VH.set(seg, x);
    }
    public static short rw$get(MemorySegment seg, long index) {
        return (short)libraw_custom_camera_t.rw$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rw$set(MemorySegment seg, long index, short x) {
        libraw_custom_camera_t.rw$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rh$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rh"));
    public static VarHandle rh$VH() {
        return libraw_custom_camera_t.rh$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short rh;
     * }
     */
    public static short rh$get(MemorySegment seg) {
        return (short)libraw_custom_camera_t.rh$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short rh;
     * }
     */
    public static void rh$set(MemorySegment seg, short x) {
        libraw_custom_camera_t.rh$VH.set(seg, x);
    }
    public static short rh$get(MemorySegment seg, long index) {
        return (short)libraw_custom_camera_t.rh$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rh$set(MemorySegment seg, long index, short x) {
        libraw_custom_camera_t.rh$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lm"));
    public static VarHandle lm$VH() {
        return libraw_custom_camera_t.lm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char lm;
     * }
     */
    public static byte lm$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.lm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char lm;
     * }
     */
    public static void lm$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.lm$VH.set(seg, x);
    }
    public static byte lm$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.lm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lm$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.lm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tm"));
    public static VarHandle tm$VH() {
        return libraw_custom_camera_t.tm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char tm;
     * }
     */
    public static byte tm$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.tm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char tm;
     * }
     */
    public static void tm$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.tm$VH.set(seg, x);
    }
    public static byte tm$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.tm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tm$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.tm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rm"));
    public static VarHandle rm$VH() {
        return libraw_custom_camera_t.rm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char rm;
     * }
     */
    public static byte rm$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.rm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char rm;
     * }
     */
    public static void rm$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.rm$VH.set(seg, x);
    }
    public static byte rm$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.rm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rm$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.rm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("bm"));
    public static VarHandle bm$VH() {
        return libraw_custom_camera_t.bm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char bm;
     * }
     */
    public static byte bm$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.bm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char bm;
     * }
     */
    public static void bm$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.bm$VH.set(seg, x);
    }
    public static byte bm$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.bm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bm$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.bm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lf"));
    public static VarHandle lf$VH() {
        return libraw_custom_camera_t.lf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short lf;
     * }
     */
    public static short lf$get(MemorySegment seg) {
        return (short)libraw_custom_camera_t.lf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short lf;
     * }
     */
    public static void lf$set(MemorySegment seg, short x) {
        libraw_custom_camera_t.lf$VH.set(seg, x);
    }
    public static short lf$get(MemorySegment seg, long index) {
        return (short)libraw_custom_camera_t.lf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lf$set(MemorySegment seg, long index, short x) {
        libraw_custom_camera_t.lf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cf"));
    public static VarHandle cf$VH() {
        return libraw_custom_camera_t.cf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char cf;
     * }
     */
    public static byte cf$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.cf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char cf;
     * }
     */
    public static void cf$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.cf$VH.set(seg, x);
    }
    public static byte cf$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.cf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cf$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.cf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle max$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("max"));
    public static VarHandle max$VH() {
        return libraw_custom_camera_t.max$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char max;
     * }
     */
    public static byte max$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.max$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char max;
     * }
     */
    public static void max$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.max$VH.set(seg, x);
    }
    public static byte max$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.max$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void max$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.max$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("flags"));
    public static VarHandle flags$VH() {
        return libraw_custom_camera_t.flags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char flags;
     * }
     */
    public static byte flags$get(MemorySegment seg) {
        return (byte)libraw_custom_camera_t.flags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char flags;
     * }
     */
    public static void flags$set(MemorySegment seg, byte x) {
        libraw_custom_camera_t.flags$VH.set(seg, x);
    }
    public static byte flags$get(MemorySegment seg, long index) {
        return (byte)libraw_custom_camera_t.flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void flags$set(MemorySegment seg, long index, byte x) {
        libraw_custom_camera_t.flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment t_make$slice(MemorySegment seg) {
        return seg.asSlice(17, 10);
    }
    public static MemorySegment t_model$slice(MemorySegment seg) {
        return seg.asSlice(27, 20);
    }
    static final VarHandle offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("offset"));
    public static VarHandle offset$VH() {
        return libraw_custom_camera_t.offset$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short offset;
     * }
     */
    public static short offset$get(MemorySegment seg) {
        return (short)libraw_custom_camera_t.offset$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short offset;
     * }
     */
    public static void offset$set(MemorySegment seg, short x) {
        libraw_custom_camera_t.offset$VH.set(seg, x);
    }
    public static short offset$get(MemorySegment seg, long index) {
        return (short)libraw_custom_camera_t.offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void offset$set(MemorySegment seg, long index, short x) {
        libraw_custom_camera_t.offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


