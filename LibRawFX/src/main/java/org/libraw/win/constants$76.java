// Generated by jextract

package org.libraw.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$76 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$76() {}
    static final VarHandle const$0 = constants$74.const$5.varHandle(MemoryLayout.PathElement.groupElement("sony_arw2_posterization_thr"));
    static final VarHandle const$1 = constants$74.const$5.varHandle(MemoryLayout.PathElement.groupElement("coolscan_nef_gamma"));
    static final VarHandle const$2 = constants$74.const$5.varHandle(MemoryLayout.PathElement.groupElement("custom_camera_strings"));
    static final StructLayout const$3 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("raw_alloc"),
        RuntimeHelper.POINTER.withName("raw_image"),
        RuntimeHelper.POINTER.withName("color4_image"),
        RuntimeHelper.POINTER.withName("color3_image"),
        RuntimeHelper.POINTER.withName("float_image"),
        RuntimeHelper.POINTER.withName("float3_image"),
        RuntimeHelper.POINTER.withName("float4_image"),
        RuntimeHelper.POINTER.withName("ph1_cblack"),
        RuntimeHelper.POINTER.withName("ph1_rblack"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(4, JAVA_BYTE).withName("guard"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("make"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("model"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("software"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("normalized_make"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("normalized_model"),
            JAVA_INT.withName("maker_index"),
            JAVA_INT.withName("raw_count"),
            JAVA_INT.withName("dng_version"),
            JAVA_INT.withName("is_foveon"),
            JAVA_INT.withName("colors"),
            JAVA_INT.withName("filters"),
            MemoryLayout.sequenceLayout(6, MemoryLayout.sequenceLayout(6, JAVA_BYTE)).withName("xtrans"),
            MemoryLayout.sequenceLayout(6, MemoryLayout.sequenceLayout(6, JAVA_BYTE)).withName("xtrans_abs"),
            MemoryLayout.sequenceLayout(5, JAVA_BYTE).withName("cdesc"),
            MemoryLayout.paddingLayout(3),
            JAVA_INT.withName("xmplen"),
            RuntimeHelper.POINTER.withName("xmpdata")
        ).withName("iparams"),
        MemoryLayout.structLayout(
            JAVA_SHORT.withName("raw_height"),
            JAVA_SHORT.withName("raw_width"),
            JAVA_SHORT.withName("height"),
            JAVA_SHORT.withName("width"),
            JAVA_SHORT.withName("top_margin"),
            JAVA_SHORT.withName("left_margin"),
            JAVA_SHORT.withName("iheight"),
            JAVA_SHORT.withName("iwidth"),
            JAVA_INT.withName("raw_pitch"),
            MemoryLayout.paddingLayout(4),
            JAVA_DOUBLE.withName("pixel_aspect"),
            JAVA_INT.withName("flip"),
            MemoryLayout.sequenceLayout(8, MemoryLayout.sequenceLayout(4, JAVA_INT)).withName("mask"),
            JAVA_SHORT.withName("raw_aspect"),
            MemoryLayout.sequenceLayout(2, MemoryLayout.structLayout(
                JAVA_SHORT.withName("cleft"),
                JAVA_SHORT.withName("ctop"),
                JAVA_SHORT.withName("cwidth"),
                JAVA_SHORT.withName("cheight")
            ).withName("libraw_raw_inset_crop_t")).withName("raw_inset_crops"),
            MemoryLayout.paddingLayout(2)
        ).withName("sizes"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("mix_green"),
            JAVA_INT.withName("raw_color"),
            JAVA_INT.withName("zero_is_bad"),
            JAVA_SHORT.withName("shrink"),
            JAVA_SHORT.withName("fuji_width")
        ).withName("ioparams"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(65536, JAVA_SHORT).withName("curve"),
            MemoryLayout.sequenceLayout(4104, JAVA_INT).withName("cblack"),
            JAVA_INT.withName("black"),
            JAVA_INT.withName("data_maximum"),
            JAVA_INT.withName("maximum"),
            MemoryLayout.sequenceLayout(4, JAVA_INT).withName("linear_max"),
            JAVA_FLOAT.withName("fmaximum"),
            JAVA_FLOAT.withName("fnorm"),
            MemoryLayout.sequenceLayout(8, MemoryLayout.sequenceLayout(8, JAVA_SHORT)).withName("white"),
            MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("cam_mul"),
            MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("pre_mul"),
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("cmatrix"),
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("ccm"),
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("rgb_cam"),
            MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("cam_xyz"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("format"),
                JAVA_INT.withName("key_off"),
                JAVA_INT.withName("tag_21a"),
                JAVA_INT.withName("t_black"),
                JAVA_INT.withName("split_col"),
                JAVA_INT.withName("black_col"),
                JAVA_INT.withName("split_row"),
                JAVA_INT.withName("black_row"),
                JAVA_FLOAT.withName("tag_210")
            ).withName("phase_one_data"),
            JAVA_FLOAT.withName("flash_used"),
            JAVA_FLOAT.withName("canon_ev"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("model2"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("UniqueCameraModel"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("LocalizedCameraModel"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("ImageUniqueID"),
            MemoryLayout.sequenceLayout(17, JAVA_BYTE).withName("RawDataUniqueID"),
            MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("OriginalRawFileName"),
            MemoryLayout.paddingLayout(7),
            RuntimeHelper.POINTER.withName("profile"),
            JAVA_INT.withName("profile_length"),
            MemoryLayout.sequenceLayout(8, JAVA_INT).withName("black_stat"),
            MemoryLayout.sequenceLayout(2, MemoryLayout.structLayout(
                JAVA_INT.withName("parsedfields"),
                JAVA_SHORT.withName("illuminant"),
                MemoryLayout.paddingLayout(2),
                MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("calibration"),
                MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("colormatrix"),
                MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("forwardmatrix")
            ).withName("libraw_dng_color_t")).withName("dng_color"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("parsedfields"),
                MemoryLayout.sequenceLayout(4104, JAVA_INT).withName("dng_cblack"),
                JAVA_INT.withName("dng_black"),
                MemoryLayout.sequenceLayout(4104, JAVA_FLOAT).withName("dng_fcblack"),
                JAVA_FLOAT.withName("dng_fblack"),
                MemoryLayout.sequenceLayout(4, JAVA_INT).withName("dng_whitelevel"),
                MemoryLayout.sequenceLayout(4, JAVA_SHORT).withName("default_crop"),
                MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("user_crop"),
                JAVA_INT.withName("preview_colorspace"),
                MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("analogbalance"),
                MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("asshotneutral"),
                JAVA_FLOAT.withName("baseline_exposure"),
                JAVA_FLOAT.withName("LinearResponseLimit")
            ).withName("dng_levels"),
            MemoryLayout.sequenceLayout(256, MemoryLayout.sequenceLayout(4, JAVA_INT)).withName("WB_Coeffs"),
            MemoryLayout.sequenceLayout(64, MemoryLayout.sequenceLayout(5, JAVA_FLOAT)).withName("WBCT_Coeffs"),
            JAVA_INT.withName("as_shot_wb_applied"),
            MemoryLayout.sequenceLayout(2, MemoryLayout.structLayout(
                MemoryLayout.sequenceLayout(9, JAVA_FLOAT).withName("romm_cam")
            ).withName("libraw_P1_color_t")).withName("P1_color"),
            JAVA_INT.withName("raw_bps"),
            JAVA_INT.withName("ExifColorSpace")
        ).withName("color")
    ).withName("libraw_rawdata_t");
    static final VarHandle const$4 = constants$76.const$3.varHandle(MemoryLayout.PathElement.groupElement("raw_alloc"));
    static final VarHandle const$5 = constants$76.const$3.varHandle(MemoryLayout.PathElement.groupElement("raw_image"));
}


