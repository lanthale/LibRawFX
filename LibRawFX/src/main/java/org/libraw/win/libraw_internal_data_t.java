// Generated by jextract

package org.libraw.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct libraw_internal_data_t {
 *     struct internal_data_t internal_data;
 *     struct libraw_internal_output_params_t internal_output_params;
 *     struct output_data_t output_data;
 *     struct identify_data_t identify_data;
 *     struct unpacker_data_t unpacker_data;
 * };
 * }
 */
public class libraw_internal_data_t {

    public static MemoryLayout $LAYOUT() {
        return constants$105.const$4;
    }
    public static MemorySegment internal_data$slice(MemorySegment seg) {
        return seg.asSlice(0, 64);
    }
    public static MemorySegment internal_output_params$slice(MemorySegment seg) {
        return seg.asSlice(64, 16);
    }
    public static MemorySegment output_data$slice(MemorySegment seg) {
        return seg.asSlice(80, 16);
    }
    public static MemorySegment identify_data$slice(MemorySegment seg) {
        return seg.asSlice(96, 40);
    }
    public static MemorySegment unpacker_data$slice(MemorySegment seg) {
        return seg.asSlice(136, 1448);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


