// Generated by jextract

package org.libraw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.util.Objects;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class libraw_h_constants_0 {

    /* package-private */ libraw_h_constants_0() {}
    static final LibraryLookup[] LIBRARIES = RuntimeHelper.libraries(new String[] {
    });

    static final int LIBRAW_MAX_METADATA_BLOCKS() { return (int)1024L; }

    static final int LIBRAW_CBLACK_SIZE() { return (int)4104L; }

    static final int LIBRAW_IFD_MAXCOUNT() { return (int)10L; }

    static final int LIBRAW_CRXTRACKS_MAXCOUNT() { return (int)16L; }

    static final int LIBRAW_AHD_TILE() { return (int)512L; }

    static final int LIBRAW_XTRANS() { return (int)9L; }

    static final int LIBRAW_PROGRESS_THUMB_MASK() { return (int)268435455L; }

    static final int LIBRAW_MAJOR_VERSION() { return (int)0L; }

    static final int LIBRAW_MINOR_VERSION() { return (int)20L; }

    static final int LIBRAW_PATCH_VERSION() { return (int)2L; }

    static final int LIBRAW_SHLIB_CURRENT() { return (int)20L; }

    static final int LIBRAW_SHLIB_REVISION() { return (int)0L; }

    static final int LIBRAW_SHLIB_AGE() { return (int)0L; }

    static final int LibRawBigEndian() { return (int)0L; }

    static final int LIBRAW_HISTOGRAM_SIZE() { return (int)8192L; }

    static final int LIBRAW_OPEN_BIGFILE() { return (int)1L; }

    static final int LIBRAW_OPEN_FILE() { return (int)2L; }

    static final int LIBRAW_OPENBAYER_RGGB() { return (int)148L; }

    static final int LIBRAW_OPENBAYER_BGGR() { return (int)22L; }

    static final int LIBRAW_OPENBAYER_GRBG() { return (int)97L; }

    static final int LIBRAW_OPENBAYER_GBRG() { return (int)73L; }

    static final int LIBRAW_DNGFM_FORWARDMATRIX() { return (int)1L; }

    static final int LIBRAW_DNGFM_ILLUMINANT() { return (int)2L; }

    static final int LIBRAW_DNGFM_COLORMATRIX() { return (int)4L; }

    static final int LIBRAW_DNGFM_CALIBRATION() { return (int)8L; }

    static final int LIBRAW_DNGFM_ANALOGBALANCE() { return (int)16L; }

    static final int LIBRAW_DNGFM_BLACK() { return (int)32L; }

    static final int LIBRAW_DNGFM_WHITE() { return (int)64L; }

    static final int LIBRAW_DNGFM_OPCODE2() { return (int)128L; }

    static final int LIBRAW_DNGFM_LINTABLE() { return (int)256L; }

    static final int LIBRAW_DNGFM_CROPORIGIN() { return (int)512L; }

    static final int LIBRAW_DNGFM_CROPSIZE() { return (int)1024L; }

    static final int LIBRAW_DNGFM_PREVIEWCS() { return (int)2048L; }

    static final int LIBRAW_DNGFM_ASSHOTNEUTRAL() { return (int)4096L; }

    static final int LIBRAW_DNGFM_BASELINEEXPOSURE() { return (int)8192L; }

    static final int LIBRAW_DNGFM_LINEARRESPONSELIMIT() { return (int)16384L; }

    static final int LIBRAW_ASWB_APPLIED() { return (int)1L; }

    static final int LIBRAW_ASWB_CANON() { return (int)2L; }

    static final int LIBRAW_ASWB_NIKON() { return (int)4L; }

    static final int LIBRAW_ASWB_NIKON_SRAW() { return (int)8L; }

    static final int LIBRAW_ASWB_PENTAX() { return (int)16L; }

    static final int LIBRAW_EXIFTAG_TYPE_UNKNOWN() { return (int)0L; }

    static final int LIBRAW_EXIFTAG_TYPE_BYTE() { return (int)1L; }

    static final int LIBRAW_EXIFTAG_TYPE_ASCII() { return (int)2L; }

    static final int LIBRAW_EXIFTAG_TYPE_SHORT() { return (int)3L; }

    static final int LIBRAW_EXIFTAG_TYPE_LONG() { return (int)4L; }

    static final int LIBRAW_EXIFTAG_TYPE_RATIONAL() { return (int)5L; }

    static final int LIBRAW_EXIFTAG_TYPE_SBYTE() { return (int)6L; }

    static final int LIBRAW_EXIFTAG_TYPE_UNDEFINED() { return (int)7L; }

    static final int LIBRAW_EXIFTAG_TYPE_SSHORT() { return (int)8L; }

    static final int LIBRAW_EXIFTAG_TYPE_SLONG() { return (int)9L; }

    static final int LIBRAW_EXIFTAG_TYPE_SRATIONAL() { return (int)10L; }

    static final int LIBRAW_EXIFTAG_TYPE_FLOAT() { return (int)11L; }

    static final int LIBRAW_EXIFTAG_TYPE_DOUBLE() { return (int)12L; }

    static final int LIBRAW_EXIFTAG_TYPE_IFD() { return (int)13L; }

    static final int LIBRAW_EXIFTAG_TYPE_UNICODE() { return (int)14L; }

    static final int LIBRAW_EXIFTAG_TYPE_COMPLEX() { return (int)15L; }

    static final int LIBRAW_EXIFTAG_TYPE_LONG8() { return (int)16L; }

    static final int LIBRAW_EXIFTAG_TYPE_SLONG8() { return (int)17L; }

    static final int LIBRAW_EXIFTAG_TYPE_IFD8() { return (int)18L; }

    static final int LIBRAW_WBI_Unknown() { return (int)0L; }

    static final int LIBRAW_WBI_Daylight() { return (int)1L; }

    static final int LIBRAW_WBI_Fluorescent() { return (int)2L; }

    static final int LIBRAW_WBI_Tungsten() { return (int)3L; }

    static final int LIBRAW_WBI_Flash() { return (int)4L; }

    static final int LIBRAW_WBI_FineWeather() { return (int)9L; }

    static final int LIBRAW_WBI_Cloudy() { return (int)10L; }

    static final int LIBRAW_WBI_Shade() { return (int)11L; }

    static final int LIBRAW_WBI_FL_D() { return (int)12L; }

    static final int LIBRAW_WBI_FL_N() { return (int)13L; }

    static final int LIBRAW_WBI_FL_W() { return (int)14L; }

    static final int LIBRAW_WBI_FL_WW() { return (int)15L; }

    static final int LIBRAW_WBI_FL_L() { return (int)16L; }

    static final int LIBRAW_WBI_Ill_A() { return (int)17L; }

    static final int LIBRAW_WBI_Ill_B() { return (int)18L; }

    static final int LIBRAW_WBI_Ill_C() { return (int)19L; }

    static final int LIBRAW_WBI_D55() { return (int)20L; }

    static final int LIBRAW_WBI_D65() { return (int)21L; }

    static final int LIBRAW_WBI_D75() { return (int)22L; }

    static final int LIBRAW_WBI_D50() { return (int)23L; }

    static final int LIBRAW_WBI_StudioTungsten() { return (int)24L; }

    static final int LIBRAW_WBI_Sunset() { return (int)64L; }

    static final int LIBRAW_WBI_Underwater() { return (int)65L; }

    static final int LIBRAW_WBI_FluorescentHigh() { return (int)66L; }

    static final int LIBRAW_WBI_HT_Mercury() { return (int)67L; }

    static final int LIBRAW_WBI_AsShot() { return (int)81L; }

    static final int LIBRAW_WBI_Auto() { return (int)82L; }

    static final int LIBRAW_WBI_Custom() { return (int)83L; }

    static final int LIBRAW_WBI_Auto1() { return (int)85L; }

    static final int LIBRAW_WBI_Auto2() { return (int)86L; }

    static final int LIBRAW_WBI_Auto3() { return (int)87L; }

    static final int LIBRAW_WBI_Auto4() { return (int)88L; }

    static final int LIBRAW_WBI_Custom1() { return (int)90L; }

    static final int LIBRAW_WBI_Custom2() { return (int)91L; }

    static final int LIBRAW_WBI_Custom3() { return (int)92L; }

    static final int LIBRAW_WBI_Custom4() { return (int)93L; }

    static final int LIBRAW_WBI_Custom5() { return (int)94L; }

    static final int LIBRAW_WBI_Custom6() { return (int)95L; }

    static final int LIBRAW_WBI_PC_Set1() { return (int)96L; }

    static final int LIBRAW_WBI_PC_Set2() { return (int)97L; }

    static final int LIBRAW_WBI_PC_Set3() { return (int)98L; }

    static final int LIBRAW_WBI_PC_Set4() { return (int)99L; }

    static final int LIBRAW_WBI_PC_Set5() { return (int)100L; }

    static final int LIBRAW_WBI_Measured() { return (int)110L; }

    static final int LIBRAW_WBI_BW() { return (int)120L; }

    static final int LIBRAW_WBI_Kelvin() { return (int)254L; }

    static final int LIBRAW_WBI_Other() { return (int)255L; }

    static final int LIBRAW_WBI_None() { return (int)65535L; }

    static final int LIBRAW_ME_NONE() { return (int)0L; }

    static final int LIBRAW_ME_SIMPLE() { return (int)1L; }

    static final int LIBRAW_ME_OVERLAY() { return (int)2L; }

    static final int LIBRAW_ME_HDR() { return (int)3L; }

    static final int LIBRAW_DNG_NONE() { return (int)0L; }

    static final int LIBRAW_DNG_FLOAT() { return (int)1L; }

    static final int LIBRAW_DNG_LINEAR() { return (int)2L; }

    static final int LIBRAW_DNG_DEFLATE() { return (int)4L; }

    static final int LIBRAW_DNG_XTRANS() { return (int)8L; }

    static final int LIBRAW_DNG_OTHER() { return (int)16L; }

    static final int LIBRAW_DNG_8BIT() { return (int)32L; }

    static final int LIBRAW_DNG_ALL() { return (int)59L; }

    static final int LIBRAW_DNG_DEFAULT() { return (int)39L; }

    static final int LIBRAW_CAPS_RAWSPEED() { return (int)1L; }

    static final int LIBRAW_CAPS_DNGSDK() { return (int)2L; }

    static final int LIBRAW_CAPS_GPRSDK() { return (int)4L; }

    static final int LIBRAW_CAPS_UNICODEPATHS() { return (int)8L; }

    static final int LIBRAW_CAPS_X3FTOOLS() { return (int)16L; }

    static final int LIBRAW_CAPS_RPI6BY9() { return (int)32L; }

    static final int LIBRAW_COLORSPACE_NotFound() { return (int)0L; }

    static final int LIBRAW_COLORSPACE_sRGB() { return (int)1L; }

    static final int LIBRAW_COLORSPACE_AdobeRGB() { return (int)2L; }

    static final int LIBRAW_COLORSPACE_WideGamutRGB() { return (int)3L; }

    static final int LIBRAW_COLORSPACE_ProPhotoRGB() { return (int)4L; }

    static final int LIBRAW_COLORSPACE_ICC() { return (int)5L; }

    static final int LIBRAW_COLORSPACE_Uncalibrated() { return (int)6L; }

    static final int LIBRAW_COLORSPACE_CameraLinearUniWB() { return (int)7L; }

    static final int LIBRAW_COLORSPACE_CameraLinear() { return (int)8L; }

    static final int LIBRAW_COLORSPACE_CameraGammaUniWB() { return (int)9L; }

    static final int LIBRAW_COLORSPACE_CameraGamma() { return (int)10L; }

    static final int LIBRAW_COLORSPACE_MonochromeLinear() { return (int)11L; }

    static final int LIBRAW_COLORSPACE_MonochromeGamma() { return (int)12L; }

    static final int LIBRAW_COLORSPACE_Unknown() { return (int)255L; }

    static final int LIBRAW_CAMERAMAKER_Unknown() { return (int)0L; }

    static final int LIBRAW_CAMERAMAKER_Agfa() { return (int)1L; }

    static final int LIBRAW_CAMERAMAKER_Alcatel() { return (int)2L; }

    static final int LIBRAW_CAMERAMAKER_Apple() { return (int)3L; }

    static final int LIBRAW_CAMERAMAKER_Aptina() { return (int)4L; }

    static final int LIBRAW_CAMERAMAKER_AVT() { return (int)5L; }

    static final int LIBRAW_CAMERAMAKER_Baumer() { return (int)6L; }

    static final int LIBRAW_CAMERAMAKER_Broadcom() { return (int)7L; }

    static final int LIBRAW_CAMERAMAKER_Canon() { return (int)8L; }

    static final int LIBRAW_CAMERAMAKER_Casio() { return (int)9L; }

    static final int LIBRAW_CAMERAMAKER_CINE() { return (int)10L; }

    static final int LIBRAW_CAMERAMAKER_Clauss() { return (int)11L; }

    static final int LIBRAW_CAMERAMAKER_Contax() { return (int)12L; }

    static final int LIBRAW_CAMERAMAKER_Creative() { return (int)13L; }

    static final int LIBRAW_CAMERAMAKER_DJI() { return (int)14L; }

    static final int LIBRAW_CAMERAMAKER_DXO() { return (int)15L; }

    static final int LIBRAW_CAMERAMAKER_Epson() { return (int)16L; }

    static final int LIBRAW_CAMERAMAKER_Foculus() { return (int)17L; }

    static final int LIBRAW_CAMERAMAKER_Fujifilm() { return (int)18L; }

    static final int LIBRAW_CAMERAMAKER_Generic() { return (int)19L; }

    static final int LIBRAW_CAMERAMAKER_Gione() { return (int)20L; }

    static final int LIBRAW_CAMERAMAKER_GITUP() { return (int)21L; }

    static final int LIBRAW_CAMERAMAKER_Google() { return (int)22L; }

    static final int LIBRAW_CAMERAMAKER_GoPro() { return (int)23L; }

    static final int LIBRAW_CAMERAMAKER_Hasselblad() { return (int)24L; }

    static final int LIBRAW_CAMERAMAKER_HTC() { return (int)25L; }

    static final int LIBRAW_CAMERAMAKER_I_Mobile() { return (int)26L; }

    static final int LIBRAW_CAMERAMAKER_Imacon() { return (int)27L; }

    static final int LIBRAW_CAMERAMAKER_JK_Imaging() { return (int)28L; }

    static final int LIBRAW_CAMERAMAKER_Kodak() { return (int)29L; }

    static final int LIBRAW_CAMERAMAKER_Konica() { return (int)30L; }

    static final int LIBRAW_CAMERAMAKER_Leaf() { return (int)31L; }

    static final int LIBRAW_CAMERAMAKER_Leica() { return (int)32L; }

    static final int LIBRAW_CAMERAMAKER_Lenovo() { return (int)33L; }

    static final int LIBRAW_CAMERAMAKER_LG() { return (int)34L; }

    static final int LIBRAW_CAMERAMAKER_Logitech() { return (int)35L; }

    static final int LIBRAW_CAMERAMAKER_Mamiya() { return (int)36L; }

    static final int LIBRAW_CAMERAMAKER_Matrix() { return (int)37L; }

    static final int LIBRAW_CAMERAMAKER_Meizu() { return (int)38L; }

    static final int LIBRAW_CAMERAMAKER_Micron() { return (int)39L; }

    static final int LIBRAW_CAMERAMAKER_Minolta() { return (int)40L; }

    static final int LIBRAW_CAMERAMAKER_Motorola() { return (int)41L; }

    static final int LIBRAW_CAMERAMAKER_NGM() { return (int)42L; }

    static final int LIBRAW_CAMERAMAKER_Nikon() { return (int)43L; }

    static final int LIBRAW_CAMERAMAKER_Nokia() { return (int)44L; }

    static final int LIBRAW_CAMERAMAKER_Olympus() { return (int)45L; }

    static final int LIBRAW_CAMERAMAKER_OmniVison() { return (int)46L; }

    static final int LIBRAW_CAMERAMAKER_Panasonic() { return (int)47L; }

    static final int LIBRAW_CAMERAMAKER_Parrot() { return (int)48L; }

    static final int LIBRAW_CAMERAMAKER_Pentax() { return (int)49L; }

    static final int LIBRAW_CAMERAMAKER_PhaseOne() { return (int)50L; }

    static final int LIBRAW_CAMERAMAKER_PhotoControl() { return (int)51L; }

    static final int LIBRAW_CAMERAMAKER_Photron() { return (int)52L; }

    static final int LIBRAW_CAMERAMAKER_Pixelink() { return (int)53L; }

    static final int LIBRAW_CAMERAMAKER_Polaroid() { return (int)54L; }

    static final int LIBRAW_CAMERAMAKER_RED() { return (int)55L; }

    static final int LIBRAW_CAMERAMAKER_Ricoh() { return (int)56L; }

    static final int LIBRAW_CAMERAMAKER_Rollei() { return (int)57L; }

    static final int LIBRAW_CAMERAMAKER_RoverShot() { return (int)58L; }

    static final int LIBRAW_CAMERAMAKER_Samsung() { return (int)59L; }

    static final int LIBRAW_CAMERAMAKER_Sigma() { return (int)60L; }

    static final int LIBRAW_CAMERAMAKER_Sinar() { return (int)61L; }

    static final int LIBRAW_CAMERAMAKER_SMaL() { return (int)62L; }

    static final int LIBRAW_CAMERAMAKER_Sony() { return (int)63L; }

    static final int LIBRAW_CAMERAMAKER_ST_Micro() { return (int)64L; }

    static final int LIBRAW_CAMERAMAKER_THL() { return (int)65L; }

    static final int LIBRAW_CAMERAMAKER_VLUU() { return (int)66L; }

    static final int LIBRAW_CAMERAMAKER_Xiaomi() { return (int)67L; }

    static final int LIBRAW_CAMERAMAKER_XIAOYI() { return (int)68L; }

    static final int LIBRAW_CAMERAMAKER_YI() { return (int)69L; }

    static final int LIBRAW_CAMERAMAKER_Yuneec() { return (int)70L; }

    static final int LIBRAW_CAMERAMAKER_Zeiss() { return (int)71L; }

    static final int LIBRAW_CAMERAMAKER_TheLastOne() { return (int)72L; }

    static final int LIBRAW_MOUNT_Unknown() { return (int)0L; }

    static final int LIBRAW_MOUNT_Alpa() { return (int)1L; }

    static final int LIBRAW_MOUNT_C() { return (int)2L; }

    static final int LIBRAW_MOUNT_Canon_EF_M() { return (int)3L; }

    static final int LIBRAW_MOUNT_Canon_EF_S() { return (int)4L; }

    static final int LIBRAW_MOUNT_Canon_EF() { return (int)5L; }

    static final int LIBRAW_MOUNT_Canon_RF() { return (int)6L; }

    static final int LIBRAW_MOUNT_Contax_N() { return (int)7L; }

    static final int LIBRAW_MOUNT_Contax645() { return (int)8L; }

    static final int LIBRAW_MOUNT_FT() { return (int)9L; }

    static final int LIBRAW_MOUNT_mFT() { return (int)10L; }

    static final int LIBRAW_MOUNT_Fuji_GF() { return (int)11L; }

    static final int LIBRAW_MOUNT_Fuji_GX() { return (int)12L; }

    static final int LIBRAW_MOUNT_Fuji_X() { return (int)13L; }

    static final int LIBRAW_MOUNT_Hasselblad_H() { return (int)14L; }

    static final int LIBRAW_MOUNT_Hasselblad_V() { return (int)15L; }

    static final int LIBRAW_MOUNT_Hasselblad_XCD() { return (int)16L; }

    static final int LIBRAW_MOUNT_Leica_M() { return (int)17L; }

    static final int LIBRAW_MOUNT_Leica_R() { return (int)18L; }

    static final int LIBRAW_MOUNT_Leica_S() { return (int)19L; }

    static final int LIBRAW_MOUNT_Leica_SL() { return (int)20L; }

    static final int LIBRAW_MOUNT_Leica_TL() { return (int)21L; }

    static final int LIBRAW_MOUNT_LPS_L() { return (int)22L; }

    static final int LIBRAW_MOUNT_Mamiya67() { return (int)23L; }

    static final int LIBRAW_MOUNT_Mamiya645() { return (int)24L; }

    static final int LIBRAW_MOUNT_Minolta_A() { return (int)25L; }

    static final int LIBRAW_MOUNT_Nikon_CX() { return (int)26L; }

    static final int LIBRAW_MOUNT_Nikon_F() { return (int)27L; }

    static final int LIBRAW_MOUNT_Nikon_Z() { return (int)28L; }

    static final int LIBRAW_MOUNT_Pentax_645() { return (int)29L; }

    static final int LIBRAW_MOUNT_Pentax_K() { return (int)30L; }

    static final int LIBRAW_MOUNT_Pentax_Q() { return (int)31L; }

    static final int LIBRAW_MOUNT_RicohModule() { return (int)32L; }

    static final int LIBRAW_MOUNT_Rollei_bayonet() { return (int)33L; }

    static final int LIBRAW_MOUNT_Samsung_NX_M() { return (int)34L; }

    static final int LIBRAW_MOUNT_Samsung_NX() { return (int)35L; }

    static final int LIBRAW_MOUNT_Sigma_X3F() { return (int)36L; }

    static final int LIBRAW_MOUNT_Sony_E() { return (int)37L; }

    static final int LIBRAW_MOUNT_LF() { return (int)38L; }

    static final int LIBRAW_MOUNT_DigitalBack() { return (int)39L; }

    static final int LIBRAW_MOUNT_FixedLens() { return (int)40L; }

    static final int LIBRAW_MOUNT_IL_UM() { return (int)41L; }

    static final int LIBRAW_MOUNT_TheLastOne() { return (int)42L; }

    static final int LIBRAW_FORMAT_Unknown() { return (int)0L; }

    static final int LIBRAW_FORMAT_APSC() { return (int)1L; }

    static final int LIBRAW_FORMAT_FF() { return (int)2L; }

    static final int LIBRAW_FORMAT_MF() { return (int)3L; }

    static final int LIBRAW_FORMAT_APSH() { return (int)4L; }

    static final int LIBRAW_FORMAT_1INCH() { return (int)5L; }

    static final int LIBRAW_FORMAT_1div2p3INCH() { return (int)6L; }

    static final int LIBRAW_FORMAT_1div1p7INCH() { return (int)7L; }

    static final int LIBRAW_FORMAT_FT() { return (int)8L; }

    static final int LIBRAW_FORMAT_CROP645() { return (int)9L; }

    static final int LIBRAW_FORMAT_LeicaS() { return (int)10L; }

    static final int LIBRAW_FORMAT_645() { return (int)11L; }

    static final int LIBRAW_FORMAT_66() { return (int)12L; }

    static final int LIBRAW_FORMAT_69() { return (int)13L; }

    static final int LIBRAW_FORMAT_LF() { return (int)14L; }

    static final int LIBRAW_FORMAT_Leica_DMR() { return (int)15L; }

    static final int LIBRAW_FORMAT_67() { return (int)16L; }

    static final int LIBRAW_FORMAT_SigmaAPSC() { return (int)17L; }

    static final int LIBRAW_FORMAT_SigmaMerrill() { return (int)18L; }

    static final int LIBRAW_FORMAT_SigmaAPSH() { return (int)19L; }

    static final int LIBRAW_FORMAT_3648() { return (int)20L; }

    static final int LIBRAW_FORMAT_68() { return (int)21L; }

    static final int LIBRAW_FORMAT_TheLastOne() { return (int)22L; }

    static final int LIBRAW_IMAGE_ASPECT_UNKNOWN() { return (int)0L; }

    static final int LIBRAW_IMAGE_ASPECT_3to2() { return (int)1L; }

    static final int LIBRAW_IMAGE_ASPECT_1to1() { return (int)2L; }

    static final int LIBRAW_IMAGE_ASPECT_4to3() { return (int)3L; }

    static final int LIBRAW_IMAGE_ASPECT_16to9() { return (int)4L; }

    static final int LIBRAW_IMAGE_ASPECT_5to4() { return (int)5L; }

    static final int LIBRAW_IMAGE_ASPECT_OTHER() { return (int)6L; }

    static final int LIBRAW_FT_UNDEFINED() { return (int)0L; }

    static final int LIBRAW_FT_PRIME_LENS() { return (int)1L; }

    static final int LIBRAW_FT_ZOOM_LENS() { return (int)2L; }

    static final int LIBRAW_FT_ZOOM_LENS_CONSTANT_APERTURE() { return (int)3L; }

    static final int LIBRAW_FT_ZOOM_LENS_VARIABLE_APERTURE() { return (int)4L; }

    static final int LIBRAW_Canon_RecordMode_UNDEFINED() { return (int)0L; }

    static final int LIBRAW_Canon_RecordMode_JPEG() { return (int)1L; }

    static final int LIBRAW_Canon_RecordMode_CRW_THM() { return (int)2L; }

    static final int LIBRAW_Canon_RecordMode_AVI_THM() { return (int)3L; }

    static final int LIBRAW_Canon_RecordMode_TIF() { return (int)4L; }

    static final int LIBRAW_Canon_RecordMode_TIF_JPEG() { return (int)5L; }

    static final int LIBRAW_Canon_RecordMode_CR2() { return (int)6L; }

    static final int LIBRAW_Canon_RecordMode_CR2_JPEG() { return (int)7L; }

    static final int LIBRAW_Canon_RecordMode_UNKNOWN() { return (int)8L; }

    static final int LIBRAW_Canon_RecordMode_MOV() { return (int)9L; }

    static final int LIBRAW_Canon_RecordMode_MP4() { return (int)10L; }

    static final int LIBRAW_Canon_RecordMode_CRM() { return (int)11L; }

    static final int LIBRAW_Canon_RecordMode_CR3() { return (int)12L; }

    static final int LIBRAW_Canon_RecordMode_CR3_JPEG() { return (int)13L; }

    static final int LIBRAW_Canon_RecordMode_HEIF() { return (int)14L; }

    static final int LIBRAW_Canon_RecordMode_CR3_HEIF() { return (int)15L; }

    static final int LIBRAW_Canon_RecordMode_TheLastOne() { return (int)16L; }

    static final int LIBRAW_SONY_DSC() { return (int)1L; }

    static final int LIBRAW_SONY_DSLR() { return (int)2L; }

    static final int LIBRAW_SONY_NEX() { return (int)3L; }

    static final int LIBRAW_SONY_SLT() { return (int)4L; }

    static final int LIBRAW_SONY_ILCE() { return (int)5L; }

    static final int LIBRAW_SONY_ILCA() { return (int)6L; }

    static final int LIBRAW_Kodak_UnknownSensor() { return (int)0L; }

    static final int LIBRAW_Kodak_M1() { return (int)1L; }

    static final int LIBRAW_Kodak_M15() { return (int)2L; }

    static final int LIBRAW_Kodak_M16() { return (int)3L; }

    static final int LIBRAW_Kodak_M17() { return (int)4L; }

    static final int LIBRAW_Kodak_M2() { return (int)5L; }

    static final int LIBRAW_Kodak_M23() { return (int)6L; }

    static final int LIBRAW_Kodak_M24() { return (int)7L; }

    static final int LIBRAW_Kodak_M3() { return (int)8L; }

    static final int LIBRAW_Kodak_M5() { return (int)9L; }

    static final int LIBRAW_Kodak_M6() { return (int)10L; }

    static final int LIBRAW_Kodak_C14() { return (int)11L; }

    static final int LIBRAW_Kodak_X14() { return (int)12L; }

    static final int LIBRAW_Kodak_M11() { return (int)13L; }

    static final int LIBRAW_HF_Unknown() { return (int)0L; }

    static final int LIBRAW_HF_3FR() { return (int)1L; }

    static final int LIBRAW_HF_FFF() { return (int)2L; }

    static final int LIBRAW_HF_Imacon() { return (int)3L; }

    static final int LIBRAW_HF_HasselbladDNG() { return (int)4L; }

    static final int LIBRAW_HF_AdobeDNG() { return (int)5L; }

    static final int LIBRAW_HF_AdobeDNG_fromPhocusDNG() { return (int)6L; }

    static final int LIBRAW_PROCESSING_SONYARW2_NONE() { return (int)0L; }

    static final int LIBRAW_PROCESSING_SONYARW2_BASEONLY() { return (int)1L; }

    static final int LIBRAW_PROCESSING_SONYARW2_DELTAONLY() { return (int)2L; }

    static final int LIBRAW_PROCESSING_SONYARW2_DELTAZEROBASE() { return (int)4L; }

    static final int LIBRAW_PROCESSING_SONYARW2_DELTATOVALUE() { return (int)8L; }

    static final int LIBRAW_PROCESSING_SONYARW2_ALLFLAGS() { return (int)15L; }

    static final int LIBRAW_PROCESSING_DP2Q_INTERPOLATERG() { return (int)16L; }

    static final int LIBRAW_PROCESSING_DP2Q_INTERPOLATEAF() { return (int)32L; }

    static final int LIBRAW_PROCESSING_PENTAX_PS_ALLFRAMES() { return (int)64L; }

    static final int LIBRAW_PROCESSING_CONVERTFLOAT_TO_INT() { return (int)128L; }

    static final int LIBRAW_PROCESSING_SRAW_NO_RGB() { return (int)256L; }

    static final int LIBRAW_PROCESSING_SRAW_NO_INTERPOLATE() { return (int)512L; }

    static final int LIBRAW_PROCESSING_ARQ_SKIP_CHANNEL_SWAP() { return (int)1024L; }

    static final int LIBRAW_PROCESSING_NO_ROTATE_FOR_KODAK_THUMBNAILS() { return (int)2048L; }

    static final int LIBRAW_PROCESSING_USE_DNG_DEFAULT_CROP() { return (int)4096L; }

    static final int LIBRAW_PROCESSING_USE_PPM16_THUMBS() { return (int)8192L; }

    static final int LIBRAW_PROCESSING_SKIP_MAKERNOTES() { return (int)16384L; }

    static final int LIBRAW_PROCESSING_DONT_CHECK_DNG_ILLUMINANT() { return (int)32768L; }

    static final int LIBRAW_PROCESSING_DNGSDK_ZEROCOPY() { return (int)65536L; }

    static final int LIBRAW_PROCESSING_ZEROFILTERS_FOR_MONOCHROMETIFFS() { return (int)131072L; }

    static final int LIBRAW_PROCESSING_DNG_ADD_ENHANCED() { return (int)262144L; }

    static final int LIBRAW_PROCESSING_DNG_ADD_PREVIEWS() { return (int)524288L; }

    static final int LIBRAW_PROCESSING_DNG_PREFER_LARGEST_IMAGE() { return (int)1048576L; }

    static final int LIBRAW_PROCESSING_DNG_STAGE2() { return (int)2097152L; }

    static final int LIBRAW_PROCESSING_DNG_STAGE3() { return (int)4194304L; }

    static final int LIBRAW_PROCESSING_DNG_ALLOWSIZECHANGE() { return (int)8388608L; }

    static final int LIBRAW_PROCESSING_DNG_DISABLEWBADJUST() { return (int)16777216L; }

    static final int LIBRAW_PROCESSING_PROVIDE_NONSTANDARD_WB() { return (int)33554432L; }

    static final int LIBRAW_PROCESSING_CAMERAWB_FALLBACK_TO_DAYLIGHT() { return (int)67108864L; }

    static final int LIBRAW_DECODER_HASCURVE() { return (int)16L; }

    static final int LIBRAW_DECODER_SONYARW2() { return (int)32L; }

    static final int LIBRAW_DECODER_TRYRAWSPEED() { return (int)64L; }

    static final int LIBRAW_DECODER_OWNALLOC() { return (int)128L; }

    static final int LIBRAW_DECODER_FIXEDMAXC() { return (int)256L; }

    static final int LIBRAW_DECODER_ADOBECOPYPIXEL() { return (int)512L; }

    static final int LIBRAW_DECODER_LEGACY_WITH_MARGINS() { return (int)1024L; }

    static final int LIBRAW_DECODER_3CHANNEL() { return (int)2048L; }

    static final int LIBRAW_DECODER_SINAR4SHOT() { return (int)2048L; }

    static final int LIBRAW_DECODER_FLATDATA() { return (int)4096L; }

    static final int LIBRAW_DECODER_FLAT_BG2_SWAPPED() { return (int)8192L; }

    static final int LIBRAW_DECODER_NOTSET() { return (int)32768L; }

    static final int LIBRAW_OPTIONS_NONE() { return (int)0L; }

    static final int LIBRAW_OPIONS_NO_MEMERR_CALLBACK() { return (int)1L; }

    static final int LIBRAW_OPIONS_NO_DATAERR_CALLBACK() { return (int)2L; }

    static final int LIBRAW_WARN_NONE() { return (int)0L; }

    static final int LIBRAW_WARN_BAD_CAMERA_WB() { return (int)4L; }

    static final int LIBRAW_WARN_NO_METADATA() { return (int)8L; }

    static final int LIBRAW_WARN_NO_JPEGLIB() { return (int)16L; }

    static final int LIBRAW_WARN_NO_EMBEDDED_PROFILE() { return (int)32L; }

    static final int LIBRAW_WARN_NO_INPUT_PROFILE() { return (int)64L; }

    static final int LIBRAW_WARN_BAD_OUTPUT_PROFILE() { return (int)128L; }

    static final int LIBRAW_WARN_NO_BADPIXELMAP() { return (int)256L; }

    static final int LIBRAW_WARN_BAD_DARKFRAME_FILE() { return (int)512L; }

    static final int LIBRAW_WARN_BAD_DARKFRAME_DIM() { return (int)1024L; }

    static final int LIBRAW_WARN_NO_JASPER() { return (int)2048L; }

    static final int LIBRAW_WARN_RAWSPEED_PROBLEM() { return (int)4096L; }

    static final int LIBRAW_WARN_RAWSPEED_UNSUPPORTED() { return (int)8192L; }

    static final int LIBRAW_WARN_RAWSPEED_PROCESSED() { return (int)16384L; }

    static final int LIBRAW_WARN_FALLBACK_TO_AHD() { return (int)32768L; }

    static final int LIBRAW_WARN_PARSEFUJI_PROCESSED() { return (int)65536L; }

    static final int LIBRAW_WARN_DNGSDK_PROCESSED() { return (int)131072L; }

    static final int LIBRAW_WARN_DNG_IMAGES_REORDERED() { return (int)262144L; }

    static final int LIBRAW_WARN_DNG_STAGE2_APPLIED() { return (int)524288L; }

    static final int LIBRAW_WARN_DNG_STAGE3_APPLIED() { return (int)1048576L; }

    static final int LIBRAW_EXCEPTION_NONE() { return (int)0L; }

    static final int LIBRAW_EXCEPTION_ALLOC() { return (int)1L; }

    static final int LIBRAW_EXCEPTION_DECODE_RAW() { return (int)2L; }

    static final int LIBRAW_EXCEPTION_DECODE_JPEG() { return (int)3L; }

    static final int LIBRAW_EXCEPTION_IO_EOF() { return (int)4L; }

    static final int LIBRAW_EXCEPTION_IO_CORRUPT() { return (int)5L; }

    static final int LIBRAW_EXCEPTION_CANCELLED_BY_CALLBACK() { return (int)6L; }

    static final int LIBRAW_EXCEPTION_BAD_CROP() { return (int)7L; }

    static final int LIBRAW_EXCEPTION_IO_BADFILE() { return (int)8L; }

    static final int LIBRAW_EXCEPTION_DECODE_JPEG2000() { return (int)9L; }

    static final int LIBRAW_EXCEPTION_TOOBIG() { return (int)10L; }

    static final int LIBRAW_EXCEPTION_MEMPOOL() { return (int)11L; }

    static final int LIBRAW_PROGRESS_START() { return (int)0L; }

    static final int LIBRAW_PROGRESS_OPEN() { return (int)1L; }

    static final int LIBRAW_PROGRESS_IDENTIFY() { return (int)2L; }

    static final int LIBRAW_PROGRESS_SIZE_ADJUST() { return (int)4L; }

    static final int LIBRAW_PROGRESS_LOAD_RAW() { return (int)8L; }

    static final int LIBRAW_PROGRESS_RAW2_IMAGE() { return (int)16L; }

    static final int LIBRAW_PROGRESS_REMOVE_ZEROES() { return (int)32L; }

    static final int LIBRAW_PROGRESS_BAD_PIXELS() { return (int)64L; }

    static final int LIBRAW_PROGRESS_DARK_FRAME() { return (int)128L; }

    static final int LIBRAW_PROGRESS_FOVEON_INTERPOLATE() { return (int)256L; }

    static final int LIBRAW_PROGRESS_SCALE_COLORS() { return (int)512L; }

    static final int LIBRAW_PROGRESS_PRE_INTERPOLATE() { return (int)1024L; }

    static final int LIBRAW_PROGRESS_INTERPOLATE() { return (int)2048L; }

    static final int LIBRAW_PROGRESS_MIX_GREEN() { return (int)4096L; }

    static final int LIBRAW_PROGRESS_MEDIAN_FILTER() { return (int)8192L; }

    static final int LIBRAW_PROGRESS_HIGHLIGHTS() { return (int)16384L; }

    static final int LIBRAW_PROGRESS_FUJI_ROTATE() { return (int)32768L; }

    static final int LIBRAW_PROGRESS_FLIP() { return (int)65536L; }

    static final int LIBRAW_PROGRESS_APPLY_PROFILE() { return (int)131072L; }

    static final int LIBRAW_PROGRESS_CONVERT_RGB() { return (int)262144L; }

    static final int LIBRAW_PROGRESS_STRETCH() { return (int)524288L; }

    static final int LIBRAW_PROGRESS_STAGE20() { return (int)1048576L; }

    static final int LIBRAW_PROGRESS_STAGE21() { return (int)2097152L; }

    static final int LIBRAW_PROGRESS_STAGE22() { return (int)4194304L; }

    static final int LIBRAW_PROGRESS_STAGE23() { return (int)8388608L; }

    static final int LIBRAW_PROGRESS_STAGE24() { return (int)16777216L; }

    static final int LIBRAW_PROGRESS_STAGE25() { return (int)33554432L; }

    static final int LIBRAW_PROGRESS_STAGE26() { return (int)67108864L; }

    static final int LIBRAW_PROGRESS_STAGE27() { return (int)134217728L; }

    static final int LIBRAW_PROGRESS_THUMB_LOAD() { return (int)268435456L; }

    static final int LIBRAW_PROGRESS_TRESERVED1() { return (int)536870912L; }

    static final int LIBRAW_PROGRESS_TRESERVED2() { return (int)1073741824L; }

    static final int LIBRAW_SUCCESS() { return (int)0L; }

    static final int LIBRAW_UNSPECIFIED_ERROR() { return (int)-1L; }

    static final int LIBRAW_FILE_UNSUPPORTED() { return (int)-2L; }

    static final int LIBRAW_REQUEST_FOR_NONEXISTENT_IMAGE() { return (int)-3L; }

    static final int LIBRAW_OUT_OF_ORDER_CALL() { return (int)-4L; }

    static final int LIBRAW_NO_THUMBNAIL() { return (int)-5L; }

    static final int LIBRAW_UNSUPPORTED_THUMBNAIL() { return (int)-6L; }

    static final int LIBRAW_INPUT_CLOSED() { return (int)-7L; }

    static final int LIBRAW_NOT_IMPLEMENTED() { return (int)-8L; }

    static final int LIBRAW_UNSUFFICIENT_MEMORY() { return (int)-100007L; }

    static final int LIBRAW_DATA_ERROR() { return (int)-100008L; }

    static final int LIBRAW_IO_ERROR() { return (int)-100009L; }

    static final int LIBRAW_CANCELLED_BY_CALLBACK() { return (int)-100010L; }

    static final int LIBRAW_BAD_CROP() { return (int)-100011L; }

    static final int LIBRAW_TOO_BIG() { return (int)-100012L; }

    static final int LIBRAW_MEMPOOL_OVERFLOW() { return (int)-100013L; }

    static final int LIBRAW_THUMBNAIL_UNKNOWN() { return (int)0L; }

    static final int LIBRAW_THUMBNAIL_JPEG() { return (int)1L; }

    static final int LIBRAW_THUMBNAIL_BITMAP() { return (int)2L; }

    static final int LIBRAW_THUMBNAIL_BITMAP16() { return (int)3L; }

    static final int LIBRAW_THUMBNAIL_LAYER() { return (int)4L; }

    static final int LIBRAW_THUMBNAIL_ROLLEI() { return (int)5L; }

    static final int LIBRAW_IMAGE_JPEG() { return (int)1L; }

    static final int LIBRAW_IMAGE_BITMAP() { return (int)2L; }

    static final MemoryLayout libraw_decoder_info_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("decoder_name"),
        C_INT.withName("decoder_flags"),
        MemoryLayout.ofPaddingBits(32)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_decoder_info_t$struct$LAYOUT() { return libraw_decoder_info_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_decoder_info_t$decoder_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_decoder_info_t$decoder_name$LAYOUT() { return libraw_decoder_info_t$decoder_name$LAYOUT_; }

    static final VarHandle libraw_decoder_info_t$decoder_name$VH_ = MemoryHandles.asAddressVarHandle(libraw_decoder_info_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("decoder_name")));
    static final java.lang.invoke.VarHandle libraw_decoder_info_t$decoder_name$VH() { return libraw_decoder_info_t$decoder_name$VH_; }

    static final MemoryLayout libraw_decoder_info_t$decoder_flags$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_decoder_info_t$decoder_flags$LAYOUT() { return libraw_decoder_info_t$decoder_flags$LAYOUT_; }

    static final VarHandle libraw_decoder_info_t$decoder_flags$VH_ = libraw_decoder_info_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("decoder_flags"));
    static final java.lang.invoke.VarHandle libraw_decoder_info_t$decoder_flags$VH() { return libraw_decoder_info_t$decoder_flags$VH_; }

    static final MemoryLayout libraw_internal_output_params_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("mix_green"),
        C_INT.withName("raw_color"),
        C_INT.withName("zero_is_bad"),
        C_SHORT.withName("shrink"),
        C_SHORT.withName("fuji_width")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$struct$LAYOUT() { return libraw_internal_output_params_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_internal_output_params_t$mix_green$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$mix_green$LAYOUT() { return libraw_internal_output_params_t$mix_green$LAYOUT_; }

    static final VarHandle libraw_internal_output_params_t$mix_green$VH_ = libraw_internal_output_params_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mix_green"));
    static final java.lang.invoke.VarHandle libraw_internal_output_params_t$mix_green$VH() { return libraw_internal_output_params_t$mix_green$VH_; }

    static final MemoryLayout libraw_internal_output_params_t$raw_color$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$raw_color$LAYOUT() { return libraw_internal_output_params_t$raw_color$LAYOUT_; }

    static final VarHandle libraw_internal_output_params_t$raw_color$VH_ = libraw_internal_output_params_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("raw_color"));
    static final java.lang.invoke.VarHandle libraw_internal_output_params_t$raw_color$VH() { return libraw_internal_output_params_t$raw_color$VH_; }

    static final MemoryLayout libraw_internal_output_params_t$zero_is_bad$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$zero_is_bad$LAYOUT() { return libraw_internal_output_params_t$zero_is_bad$LAYOUT_; }

    static final VarHandle libraw_internal_output_params_t$zero_is_bad$VH_ = libraw_internal_output_params_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("zero_is_bad"));
    static final java.lang.invoke.VarHandle libraw_internal_output_params_t$zero_is_bad$VH() { return libraw_internal_output_params_t$zero_is_bad$VH_; }

    static final MemoryLayout libraw_internal_output_params_t$shrink$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$shrink$LAYOUT() { return libraw_internal_output_params_t$shrink$LAYOUT_; }

    static final VarHandle libraw_internal_output_params_t$shrink$VH_ = libraw_internal_output_params_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("shrink"));
    static final java.lang.invoke.VarHandle libraw_internal_output_params_t$shrink$VH() { return libraw_internal_output_params_t$shrink$VH_; }

    static final MemoryLayout libraw_internal_output_params_t$fuji_width$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_internal_output_params_t$fuji_width$LAYOUT() { return libraw_internal_output_params_t$fuji_width$LAYOUT_; }

    static final VarHandle libraw_internal_output_params_t$fuji_width$VH_ = libraw_internal_output_params_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("fuji_width"));
    static final java.lang.invoke.VarHandle libraw_internal_output_params_t$fuji_width$VH() { return libraw_internal_output_params_t$fuji_width$VH_; }

    static final FunctionDescriptor memory_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor memory_callback$FUNC() { return memory_callback$FUNC_; }

    static final FunctionDescriptor exif_parser_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor exif_parser_callback$FUNC() { return exif_parser_callback$FUNC_; }

    static final FunctionDescriptor default_memory_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor default_memory_callback$FUNC() { return default_memory_callback$FUNC_; }

    static final MethodHandle default_memory_callback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "default_memory_callback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        default_memory_callback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle default_memory_callback$MH() { return default_memory_callback$MH_; }

    static final FunctionDescriptor data_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor data_callback$FUNC() { return data_callback$FUNC_; }

    static final FunctionDescriptor default_data_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor default_data_callback$FUNC() { return default_data_callback$FUNC_; }

    static final MethodHandle default_data_callback$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "default_data_callback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        default_data_callback$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle default_data_callback$MH() { return default_data_callback$MH_; }

    static final FunctionDescriptor progress_callback$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor progress_callback$FUNC() { return progress_callback$FUNC_; }

    static final FunctionDescriptor pre_identify_callback$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor pre_identify_callback$FUNC() { return pre_identify_callback$FUNC_; }

    static final FunctionDescriptor post_identify_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor post_identify_callback$FUNC() { return post_identify_callback$FUNC_; }

    static final FunctionDescriptor process_step_callback$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor process_step_callback$FUNC() { return process_step_callback$FUNC_; }

    static final MemoryLayout libraw_callbacks_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("mem_cb"),
        C_POINTER.withName("memcb_data"),
        C_POINTER.withName("data_cb"),
        C_POINTER.withName("datacb_data"),
        C_POINTER.withName("progress_cb"),
        C_POINTER.withName("progresscb_data"),
        C_POINTER.withName("exif_cb"),
        C_POINTER.withName("exifparser_data"),
        C_POINTER.withName("pre_identify_cb"),
        C_POINTER.withName("post_identify_cb"),
        C_POINTER.withName("pre_subtractblack_cb"),
        C_POINTER.withName("pre_scalecolors_cb"),
        C_POINTER.withName("pre_preinterpolate_cb"),
        C_POINTER.withName("pre_interpolate_cb"),
        C_POINTER.withName("interpolate_bayer_cb"),
        C_POINTER.withName("interpolate_xtrans_cb"),
        C_POINTER.withName("post_interpolate_cb"),
        C_POINTER.withName("pre_converttorgb_cb"),
        C_POINTER.withName("post_converttorgb_cb")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$struct$LAYOUT() { return libraw_callbacks_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_callbacks_t$mem_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$mem_cb$LAYOUT() { return libraw_callbacks_t$mem_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$mem_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("mem_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$mem_cb$VH() { return libraw_callbacks_t$mem_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$memcb_data$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$memcb_data$LAYOUT() { return libraw_callbacks_t$memcb_data$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$memcb_data$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("memcb_data")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$memcb_data$VH() { return libraw_callbacks_t$memcb_data$VH_; }

    static final MemoryLayout libraw_callbacks_t$data_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$data_cb$LAYOUT() { return libraw_callbacks_t$data_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$data_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("data_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$data_cb$VH() { return libraw_callbacks_t$data_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$datacb_data$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$datacb_data$LAYOUT() { return libraw_callbacks_t$datacb_data$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$datacb_data$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("datacb_data")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$datacb_data$VH() { return libraw_callbacks_t$datacb_data$VH_; }

    static final MemoryLayout libraw_callbacks_t$progress_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$progress_cb$LAYOUT() { return libraw_callbacks_t$progress_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$progress_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("progress_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$progress_cb$VH() { return libraw_callbacks_t$progress_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$progresscb_data$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$progresscb_data$LAYOUT() { return libraw_callbacks_t$progresscb_data$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$progresscb_data$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("progresscb_data")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$progresscb_data$VH() { return libraw_callbacks_t$progresscb_data$VH_; }

    static final MemoryLayout libraw_callbacks_t$exif_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$exif_cb$LAYOUT() { return libraw_callbacks_t$exif_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$exif_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("exif_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$exif_cb$VH() { return libraw_callbacks_t$exif_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$exifparser_data$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$exifparser_data$LAYOUT() { return libraw_callbacks_t$exifparser_data$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$exifparser_data$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("exifparser_data")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$exifparser_data$VH() { return libraw_callbacks_t$exifparser_data$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_identify_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_identify_cb$LAYOUT() { return libraw_callbacks_t$pre_identify_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_identify_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_identify_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_identify_cb$VH() { return libraw_callbacks_t$pre_identify_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$post_identify_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$post_identify_cb$LAYOUT() { return libraw_callbacks_t$post_identify_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$post_identify_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("post_identify_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$post_identify_cb$VH() { return libraw_callbacks_t$post_identify_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_subtractblack_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_subtractblack_cb$LAYOUT() { return libraw_callbacks_t$pre_subtractblack_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_subtractblack_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_subtractblack_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_subtractblack_cb$VH() { return libraw_callbacks_t$pre_subtractblack_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_scalecolors_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_scalecolors_cb$LAYOUT() { return libraw_callbacks_t$pre_scalecolors_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_scalecolors_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_scalecolors_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_scalecolors_cb$VH() { return libraw_callbacks_t$pre_scalecolors_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_preinterpolate_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_preinterpolate_cb$LAYOUT() { return libraw_callbacks_t$pre_preinterpolate_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_preinterpolate_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_preinterpolate_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_preinterpolate_cb$VH() { return libraw_callbacks_t$pre_preinterpolate_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_interpolate_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_interpolate_cb$LAYOUT() { return libraw_callbacks_t$pre_interpolate_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_interpolate_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_interpolate_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_interpolate_cb$VH() { return libraw_callbacks_t$pre_interpolate_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$interpolate_bayer_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$interpolate_bayer_cb$LAYOUT() { return libraw_callbacks_t$interpolate_bayer_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$interpolate_bayer_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("interpolate_bayer_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$interpolate_bayer_cb$VH() { return libraw_callbacks_t$interpolate_bayer_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$interpolate_xtrans_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$interpolate_xtrans_cb$LAYOUT() { return libraw_callbacks_t$interpolate_xtrans_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$interpolate_xtrans_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("interpolate_xtrans_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$interpolate_xtrans_cb$VH() { return libraw_callbacks_t$interpolate_xtrans_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$post_interpolate_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$post_interpolate_cb$LAYOUT() { return libraw_callbacks_t$post_interpolate_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$post_interpolate_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("post_interpolate_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$post_interpolate_cb$VH() { return libraw_callbacks_t$post_interpolate_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$pre_converttorgb_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$pre_converttorgb_cb$LAYOUT() { return libraw_callbacks_t$pre_converttorgb_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$pre_converttorgb_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pre_converttorgb_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$pre_converttorgb_cb$VH() { return libraw_callbacks_t$pre_converttorgb_cb$VH_; }

    static final MemoryLayout libraw_callbacks_t$post_converttorgb_cb$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_callbacks_t$post_converttorgb_cb$LAYOUT() { return libraw_callbacks_t$post_converttorgb_cb$LAYOUT_; }

    static final VarHandle libraw_callbacks_t$post_converttorgb_cb$VH_ = MemoryHandles.asAddressVarHandle(libraw_callbacks_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("post_converttorgb_cb")));
    static final java.lang.invoke.VarHandle libraw_callbacks_t$post_converttorgb_cb$VH() { return libraw_callbacks_t$post_converttorgb_cb$VH_; }

    static final MemoryLayout libraw_processed_image_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("type"),
        C_SHORT.withName("height"),
        C_SHORT.withName("width"),
        C_SHORT.withName("colors"),
        C_SHORT.withName("bits"),
        C_INT.withName("data_size"),
        MemoryLayout.ofSequence(1, C_CHAR).withName("data"),
        MemoryLayout.ofPaddingBits(24)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$struct$LAYOUT() { return libraw_processed_image_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_processed_image_t$type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$type$LAYOUT() { return libraw_processed_image_t$type$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$type$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$type$VH() { return libraw_processed_image_t$type$VH_; }

    static final MemoryLayout libraw_processed_image_t$height$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$height$LAYOUT() { return libraw_processed_image_t$height$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$height$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("height"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$height$VH() { return libraw_processed_image_t$height$VH_; }

    static final MemoryLayout libraw_processed_image_t$width$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$width$LAYOUT() { return libraw_processed_image_t$width$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$width$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("width"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$width$VH() { return libraw_processed_image_t$width$VH_; }

    static final MemoryLayout libraw_processed_image_t$colors$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$colors$LAYOUT() { return libraw_processed_image_t$colors$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$colors$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("colors"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$colors$VH() { return libraw_processed_image_t$colors$VH_; }

    static final MemoryLayout libraw_processed_image_t$bits$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$bits$LAYOUT() { return libraw_processed_image_t$bits$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$bits$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("bits"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$bits$VH() { return libraw_processed_image_t$bits$VH_; }

    static final MemoryLayout libraw_processed_image_t$data_size$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_processed_image_t$data_size$LAYOUT() { return libraw_processed_image_t$data_size$LAYOUT_; }

    static final VarHandle libraw_processed_image_t$data_size$VH_ = libraw_processed_image_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("data_size"));
    static final java.lang.invoke.VarHandle libraw_processed_image_t$data_size$VH() { return libraw_processed_image_t$data_size$VH_; }

    static final MemoryLayout libraw_iparams_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(4, C_CHAR).withName("guard"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("make"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("model"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("software"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("normalized_make"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("normalized_model"),
        C_INT.withName("maker_index"),
        C_INT.withName("raw_count"),
        C_INT.withName("dng_version"),
        C_INT.withName("is_foveon"),
        C_INT.withName("colors"),
        C_INT.withName("filters"),
        MemoryLayout.ofSequence(6, MemoryLayout.ofSequence(6, C_CHAR)).withName("xtrans"),
        MemoryLayout.ofSequence(6, MemoryLayout.ofSequence(6, C_CHAR)).withName("xtrans_abs"),
        MemoryLayout.ofSequence(5, C_CHAR).withName("cdesc"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("xmplen"),
        C_POINTER.withName("xmpdata")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$struct$LAYOUT() { return libraw_iparams_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_iparams_t$maker_index$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$maker_index$LAYOUT() { return libraw_iparams_t$maker_index$LAYOUT_; }

    static final VarHandle libraw_iparams_t$maker_index$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("maker_index"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$maker_index$VH() { return libraw_iparams_t$maker_index$VH_; }

    static final MemoryLayout libraw_iparams_t$raw_count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$raw_count$LAYOUT() { return libraw_iparams_t$raw_count$LAYOUT_; }

    static final VarHandle libraw_iparams_t$raw_count$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("raw_count"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$raw_count$VH() { return libraw_iparams_t$raw_count$VH_; }

    static final MemoryLayout libraw_iparams_t$dng_version$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$dng_version$LAYOUT() { return libraw_iparams_t$dng_version$LAYOUT_; }

    static final VarHandle libraw_iparams_t$dng_version$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dng_version"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$dng_version$VH() { return libraw_iparams_t$dng_version$VH_; }

    static final MemoryLayout libraw_iparams_t$is_foveon$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$is_foveon$LAYOUT() { return libraw_iparams_t$is_foveon$LAYOUT_; }

    static final VarHandle libraw_iparams_t$is_foveon$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("is_foveon"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$is_foveon$VH() { return libraw_iparams_t$is_foveon$VH_; }

    static final MemoryLayout libraw_iparams_t$colors$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$colors$LAYOUT() { return libraw_iparams_t$colors$LAYOUT_; }

    static final VarHandle libraw_iparams_t$colors$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("colors"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$colors$VH() { return libraw_iparams_t$colors$VH_; }

    static final MemoryLayout libraw_iparams_t$filters$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$filters$LAYOUT() { return libraw_iparams_t$filters$LAYOUT_; }

    static final VarHandle libraw_iparams_t$filters$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("filters"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$filters$VH() { return libraw_iparams_t$filters$VH_; }

    static final MemoryLayout libraw_iparams_t$xmplen$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$xmplen$LAYOUT() { return libraw_iparams_t$xmplen$LAYOUT_; }

    static final VarHandle libraw_iparams_t$xmplen$VH_ = libraw_iparams_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("xmplen"));
    static final java.lang.invoke.VarHandle libraw_iparams_t$xmplen$VH() { return libraw_iparams_t$xmplen$VH_; }

    static final MemoryLayout libraw_iparams_t$xmpdata$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout libraw_iparams_t$xmpdata$LAYOUT() { return libraw_iparams_t$xmpdata$LAYOUT_; }

    static final VarHandle libraw_iparams_t$xmpdata$VH_ = MemoryHandles.asAddressVarHandle(libraw_iparams_t$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("xmpdata")));
    static final java.lang.invoke.VarHandle libraw_iparams_t$xmpdata$VH() { return libraw_iparams_t$xmpdata$VH_; }

    static final MemoryLayout libraw_raw_inset_crop_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("cleft"),
        C_SHORT.withName("ctop"),
        C_SHORT.withName("cwidth"),
        C_SHORT.withName("cheight"),
        C_SHORT.withName("aspect")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$struct$LAYOUT() { return libraw_raw_inset_crop_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_raw_inset_crop_t$cleft$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$cleft$LAYOUT() { return libraw_raw_inset_crop_t$cleft$LAYOUT_; }

    static final VarHandle libraw_raw_inset_crop_t$cleft$VH_ = libraw_raw_inset_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cleft"));
    static final java.lang.invoke.VarHandle libraw_raw_inset_crop_t$cleft$VH() { return libraw_raw_inset_crop_t$cleft$VH_; }

    static final MemoryLayout libraw_raw_inset_crop_t$ctop$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$ctop$LAYOUT() { return libraw_raw_inset_crop_t$ctop$LAYOUT_; }

    static final VarHandle libraw_raw_inset_crop_t$ctop$VH_ = libraw_raw_inset_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ctop"));
    static final java.lang.invoke.VarHandle libraw_raw_inset_crop_t$ctop$VH() { return libraw_raw_inset_crop_t$ctop$VH_; }

    static final MemoryLayout libraw_raw_inset_crop_t$cwidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$cwidth$LAYOUT() { return libraw_raw_inset_crop_t$cwidth$LAYOUT_; }

    static final VarHandle libraw_raw_inset_crop_t$cwidth$VH_ = libraw_raw_inset_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cwidth"));
    static final java.lang.invoke.VarHandle libraw_raw_inset_crop_t$cwidth$VH() { return libraw_raw_inset_crop_t$cwidth$VH_; }

    static final MemoryLayout libraw_raw_inset_crop_t$cheight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$cheight$LAYOUT() { return libraw_raw_inset_crop_t$cheight$LAYOUT_; }

    static final VarHandle libraw_raw_inset_crop_t$cheight$VH_ = libraw_raw_inset_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("cheight"));
    static final java.lang.invoke.VarHandle libraw_raw_inset_crop_t$cheight$VH() { return libraw_raw_inset_crop_t$cheight$VH_; }

    static final MemoryLayout libraw_raw_inset_crop_t$aspect$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_raw_inset_crop_t$aspect$LAYOUT() { return libraw_raw_inset_crop_t$aspect$LAYOUT_; }

    static final VarHandle libraw_raw_inset_crop_t$aspect$VH_ = libraw_raw_inset_crop_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("aspect"));
    static final java.lang.invoke.VarHandle libraw_raw_inset_crop_t$aspect$VH() { return libraw_raw_inset_crop_t$aspect$VH_; }

    static final MemoryLayout libraw_image_sizes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_SHORT.withName("raw_height"),
        C_SHORT.withName("raw_width"),
        C_SHORT.withName("height"),
        C_SHORT.withName("width"),
        C_SHORT.withName("top_margin"),
        C_SHORT.withName("left_margin"),
        C_SHORT.withName("iheight"),
        C_SHORT.withName("iwidth"),
        C_INT.withName("raw_pitch"),
        MemoryLayout.ofPaddingBits(32),
        C_DOUBLE.withName("pixel_aspect"),
        C_INT.withName("flip"),
        MemoryLayout.ofSequence(8, MemoryLayout.ofSequence(4, C_INT)).withName("mask"),
        MemoryLayout.ofStruct(
            C_SHORT.withName("cleft"),
            C_SHORT.withName("ctop"),
            C_SHORT.withName("cwidth"),
            C_SHORT.withName("cheight"),
            C_SHORT.withName("aspect")
        ).withName("raw_inset_crop"),
        MemoryLayout.ofPaddingBits(16)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$struct$LAYOUT() { return libraw_image_sizes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_image_sizes_t$raw_height$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$raw_height$LAYOUT() { return libraw_image_sizes_t$raw_height$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$raw_height$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("raw_height"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$raw_height$VH() { return libraw_image_sizes_t$raw_height$VH_; }

    static final MemoryLayout libraw_image_sizes_t$raw_width$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$raw_width$LAYOUT() { return libraw_image_sizes_t$raw_width$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$raw_width$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("raw_width"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$raw_width$VH() { return libraw_image_sizes_t$raw_width$VH_; }

    static final MemoryLayout libraw_image_sizes_t$height$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$height$LAYOUT() { return libraw_image_sizes_t$height$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$height$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("height"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$height$VH() { return libraw_image_sizes_t$height$VH_; }

    static final MemoryLayout libraw_image_sizes_t$width$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$width$LAYOUT() { return libraw_image_sizes_t$width$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$width$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("width"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$width$VH() { return libraw_image_sizes_t$width$VH_; }

    static final MemoryLayout libraw_image_sizes_t$top_margin$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$top_margin$LAYOUT() { return libraw_image_sizes_t$top_margin$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$top_margin$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("top_margin"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$top_margin$VH() { return libraw_image_sizes_t$top_margin$VH_; }

    static final MemoryLayout libraw_image_sizes_t$left_margin$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$left_margin$LAYOUT() { return libraw_image_sizes_t$left_margin$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$left_margin$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("left_margin"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$left_margin$VH() { return libraw_image_sizes_t$left_margin$VH_; }

    static final MemoryLayout libraw_image_sizes_t$iheight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$iheight$LAYOUT() { return libraw_image_sizes_t$iheight$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$iheight$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iheight"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$iheight$VH() { return libraw_image_sizes_t$iheight$VH_; }

    static final MemoryLayout libraw_image_sizes_t$iwidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$iwidth$LAYOUT() { return libraw_image_sizes_t$iwidth$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$iwidth$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("iwidth"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$iwidth$VH() { return libraw_image_sizes_t$iwidth$VH_; }

    static final MemoryLayout libraw_image_sizes_t$raw_pitch$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$raw_pitch$LAYOUT() { return libraw_image_sizes_t$raw_pitch$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$raw_pitch$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("raw_pitch"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$raw_pitch$VH() { return libraw_image_sizes_t$raw_pitch$VH_; }

    static final MemoryLayout libraw_image_sizes_t$pixel_aspect$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$pixel_aspect$LAYOUT() { return libraw_image_sizes_t$pixel_aspect$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$pixel_aspect$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("pixel_aspect"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$pixel_aspect$VH() { return libraw_image_sizes_t$pixel_aspect$VH_; }

    static final MemoryLayout libraw_image_sizes_t$flip$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_image_sizes_t$flip$LAYOUT() { return libraw_image_sizes_t$flip$LAYOUT_; }

    static final VarHandle libraw_image_sizes_t$flip$VH_ = libraw_image_sizes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("flip"));
    static final java.lang.invoke.VarHandle libraw_image_sizes_t$flip$VH() { return libraw_image_sizes_t$flip$VH_; }

    static final MemoryLayout ph1_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("format"),
        C_INT.withName("key_off"),
        C_INT.withName("tag_21a"),
        C_INT.withName("t_black"),
        C_INT.withName("split_col"),
        C_INT.withName("black_col"),
        C_INT.withName("split_row"),
        C_INT.withName("black_row"),
        C_FLOAT.withName("tag_210")
    ).withName("ph1_t");
    static final jdk.incubator.foreign.MemoryLayout ph1_t$struct$LAYOUT() { return ph1_t$struct$LAYOUT_; }

    static final MemoryLayout ph1_t$format$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$format$LAYOUT() { return ph1_t$format$LAYOUT_; }

    static final VarHandle ph1_t$format$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("format"));
    static final java.lang.invoke.VarHandle ph1_t$format$VH() { return ph1_t$format$VH_; }

    static final MemoryLayout ph1_t$key_off$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$key_off$LAYOUT() { return ph1_t$key_off$LAYOUT_; }

    static final VarHandle ph1_t$key_off$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("key_off"));
    static final java.lang.invoke.VarHandle ph1_t$key_off$VH() { return ph1_t$key_off$VH_; }

    static final MemoryLayout ph1_t$tag_21a$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$tag_21a$LAYOUT() { return ph1_t$tag_21a$LAYOUT_; }

    static final VarHandle ph1_t$tag_21a$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("tag_21a"));
    static final java.lang.invoke.VarHandle ph1_t$tag_21a$VH() { return ph1_t$tag_21a$VH_; }

    static final MemoryLayout ph1_t$t_black$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$t_black$LAYOUT() { return ph1_t$t_black$LAYOUT_; }

    static final VarHandle ph1_t$t_black$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("t_black"));
    static final java.lang.invoke.VarHandle ph1_t$t_black$VH() { return ph1_t$t_black$VH_; }

    static final MemoryLayout ph1_t$split_col$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$split_col$LAYOUT() { return ph1_t$split_col$LAYOUT_; }

    static final VarHandle ph1_t$split_col$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("split_col"));
    static final java.lang.invoke.VarHandle ph1_t$split_col$VH() { return ph1_t$split_col$VH_; }

    static final MemoryLayout ph1_t$black_col$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$black_col$LAYOUT() { return ph1_t$black_col$LAYOUT_; }

    static final VarHandle ph1_t$black_col$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("black_col"));
    static final java.lang.invoke.VarHandle ph1_t$black_col$VH() { return ph1_t$black_col$VH_; }

    static final MemoryLayout ph1_t$split_row$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$split_row$LAYOUT() { return ph1_t$split_row$LAYOUT_; }

    static final VarHandle ph1_t$split_row$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("split_row"));
    static final java.lang.invoke.VarHandle ph1_t$split_row$VH() { return ph1_t$split_row$VH_; }

    static final MemoryLayout ph1_t$black_row$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$black_row$LAYOUT() { return ph1_t$black_row$LAYOUT_; }

    static final VarHandle ph1_t$black_row$VH_ = ph1_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("black_row"));
    static final java.lang.invoke.VarHandle ph1_t$black_row$VH() { return ph1_t$black_row$VH_; }

    static final MemoryLayout ph1_t$tag_210$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout ph1_t$tag_210$LAYOUT() { return ph1_t$tag_210$LAYOUT_; }

    static final VarHandle ph1_t$tag_210$VH_ = ph1_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("tag_210"));
    static final java.lang.invoke.VarHandle ph1_t$tag_210$VH() { return ph1_t$tag_210$VH_; }

    static final MemoryLayout libraw_dng_color_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("parsedfields"),
        C_SHORT.withName("illuminant"),
        MemoryLayout.ofPaddingBits(16),
        MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(4, C_FLOAT)).withName("calibration"),
        MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, C_FLOAT)).withName("colormatrix"),
        MemoryLayout.ofSequence(3, MemoryLayout.ofSequence(4, C_FLOAT)).withName("forwardmatrix")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_color_t$struct$LAYOUT() { return libraw_dng_color_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_dng_color_t$parsedfields$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_color_t$parsedfields$LAYOUT() { return libraw_dng_color_t$parsedfields$LAYOUT_; }

    static final VarHandle libraw_dng_color_t$parsedfields$VH_ = libraw_dng_color_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("parsedfields"));
    static final java.lang.invoke.VarHandle libraw_dng_color_t$parsedfields$VH() { return libraw_dng_color_t$parsedfields$VH_; }

    static final MemoryLayout libraw_dng_color_t$illuminant$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_color_t$illuminant$LAYOUT() { return libraw_dng_color_t$illuminant$LAYOUT_; }

    static final VarHandle libraw_dng_color_t$illuminant$VH_ = libraw_dng_color_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("illuminant"));
    static final java.lang.invoke.VarHandle libraw_dng_color_t$illuminant$VH() { return libraw_dng_color_t$illuminant$VH_; }

    static final MemoryLayout libraw_dng_levels_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("parsedfields"),
        MemoryLayout.ofSequence(4104, C_INT).withName("dng_cblack"),
        C_INT.withName("dng_black"),
        MemoryLayout.ofSequence(4104, C_FLOAT).withName("dng_fcblack"),
        C_FLOAT.withName("dng_fblack"),
        MemoryLayout.ofSequence(4, C_INT).withName("dng_whitelevel"),
        MemoryLayout.ofSequence(4, C_INT).withName("default_crop"),
        C_INT.withName("preview_colorspace"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("analogbalance"),
        MemoryLayout.ofSequence(4, C_FLOAT).withName("asshotneutral"),
        C_FLOAT.withName("baseline_exposure"),
        C_FLOAT.withName("LinearResponseLimit")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$struct$LAYOUT() { return libraw_dng_levels_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_dng_levels_t$parsedfields$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$parsedfields$LAYOUT() { return libraw_dng_levels_t$parsedfields$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$parsedfields$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("parsedfields"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$parsedfields$VH() { return libraw_dng_levels_t$parsedfields$VH_; }

    static final MemoryLayout libraw_dng_levels_t$dng_black$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$dng_black$LAYOUT() { return libraw_dng_levels_t$dng_black$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$dng_black$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dng_black"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$dng_black$VH() { return libraw_dng_levels_t$dng_black$VH_; }

    static final MemoryLayout libraw_dng_levels_t$dng_fblack$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$dng_fblack$LAYOUT() { return libraw_dng_levels_t$dng_fblack$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$dng_fblack$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("dng_fblack"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$dng_fblack$VH() { return libraw_dng_levels_t$dng_fblack$VH_; }

    static final MemoryLayout libraw_dng_levels_t$preview_colorspace$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$preview_colorspace$LAYOUT() { return libraw_dng_levels_t$preview_colorspace$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$preview_colorspace$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("preview_colorspace"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$preview_colorspace$VH() { return libraw_dng_levels_t$preview_colorspace$VH_; }

    static final MemoryLayout libraw_dng_levels_t$baseline_exposure$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$baseline_exposure$LAYOUT() { return libraw_dng_levels_t$baseline_exposure$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$baseline_exposure$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("baseline_exposure"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$baseline_exposure$VH() { return libraw_dng_levels_t$baseline_exposure$VH_; }

    static final MemoryLayout libraw_dng_levels_t$LinearResponseLimit$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout libraw_dng_levels_t$LinearResponseLimit$LAYOUT() { return libraw_dng_levels_t$LinearResponseLimit$LAYOUT_; }

    static final VarHandle libraw_dng_levels_t$LinearResponseLimit$VH_ = libraw_dng_levels_t$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("LinearResponseLimit"));
    static final java.lang.invoke.VarHandle libraw_dng_levels_t$LinearResponseLimit$VH() { return libraw_dng_levels_t$LinearResponseLimit$VH_; }

    static final MemoryLayout libraw_P1_color_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(9, C_FLOAT).withName("romm_cam")
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_P1_color_t$struct$LAYOUT() { return libraw_P1_color_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_canon_makernotes_t$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("ColorDataVer"),
        C_INT.withName("ColorDataSubVer"),
        C_INT.withName("SpecularWhiteLevel"),
        C_INT.withName("NormalWhiteLevel"),
        MemoryLayout.ofSequence(4, C_INT).withName("ChannelBlackLevel"),
        C_INT.withName("AverageBlackLevel"),
        MemoryLayout.ofSequence(4, C_INT).withName("multishot"),
        C_SHORT.withName("MeteringMode"),
        C_SHORT.withName("SpotMeteringMode"),
        C_CHAR.withName("FlashMeteringMode"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("FlashExposureLock"),
        C_SHORT.withName("ExposureMode"),
        C_SHORT.withName("AESetting"),
        C_CHAR.withName("HighlightTonePriority"),
        MemoryLayout.ofPaddingBits(8),
        C_SHORT.withName("ImageStabilization"),
        C_SHORT.withName("FocusMode"),
        C_SHORT.withName("AFPoint"),
        C_SHORT.withName("FocusContinuous"),
        C_SHORT.withName("AFPointsInFocus30D"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("AFPointsInFocus1D"),
        C_SHORT.withName("AFPointsInFocus5D"),
        C_SHORT.withName("AFAreaMode"),
        C_SHORT.withName("NumAFPoints"),
        C_SHORT.withName("ValidAFPoints"),
        C_SHORT.withName("AFImageWidth"),
        C_SHORT.withName("AFImageHeight"),
        MemoryLayout.ofSequence(61, C_SHORT).withName("AFAreaWidths"),
        MemoryLayout.ofSequence(61, C_SHORT).withName("AFAreaHeights"),
        MemoryLayout.ofSequence(61, C_SHORT).withName("AFAreaXPositions"),
        MemoryLayout.ofSequence(61, C_SHORT).withName("AFAreaYPositions"),
        MemoryLayout.ofSequence(4, C_SHORT).withName("AFPointsInFocus"),
        MemoryLayout.ofSequence(4, C_SHORT).withName("AFPointsSelected"),
        C_SHORT.withName("PrimaryAFPoint"),
        C_SHORT.withName("FlashMode"),
        C_SHORT.withName("FlashActivity"),
        C_SHORT.withName("FlashBits"),
        C_SHORT.withName("ManualFlashOutput"),
        C_SHORT.withName("FlashOutput"),
        C_SHORT.withName("FlashGuideNumber"),
        C_SHORT.withName("ContinuousDrive"),
        C_SHORT.withName("SensorWidth"),
        C_SHORT.withName("SensorHeight"),
        C_SHORT.withName("SensorLeftBorder"),
        C_SHORT.withName("SensorTopBorder"),
        C_SHORT.withName("SensorRightBorder"),
        C_SHORT.withName("SensorBottomBorder"),
        C_SHORT.withName("BlackMaskLeftBorder"),
        C_SHORT.withName("BlackMaskTopBorder"),
        C_SHORT.withName("BlackMaskRightBorder"),
        C_SHORT.withName("BlackMaskBottomBorder"),
        C_INT.withName("AFMicroAdjMode"),
        C_FLOAT.withName("AFMicroAdjValue"),
        C_SHORT.withName("MakernotesFlip"),
        C_SHORT.withName("RecordMode"),
        C_SHORT.withName("SRAWQuality"),
        MemoryLayout.ofPaddingBits(16),
        C_INT.withName("wbi"),
        C_FLOAT.withName("firmware"),
        C_SHORT.withName("RF_lensID"),
        MemoryLayout.ofPaddingBits(16)
    );
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$struct$LAYOUT() { return libraw_canon_makernotes_t$struct$LAYOUT_; }

    static final MemoryLayout libraw_canon_makernotes_t$ColorDataVer$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ColorDataVer$LAYOUT() { return libraw_canon_makernotes_t$ColorDataVer$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ColorDataVer$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ColorDataVer"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ColorDataVer$VH() { return libraw_canon_makernotes_t$ColorDataVer$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ColorDataSubVer$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ColorDataSubVer$LAYOUT() { return libraw_canon_makernotes_t$ColorDataSubVer$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ColorDataSubVer$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("ColorDataSubVer"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ColorDataSubVer$VH() { return libraw_canon_makernotes_t$ColorDataSubVer$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SpecularWhiteLevel$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SpecularWhiteLevel$LAYOUT() { return libraw_canon_makernotes_t$SpecularWhiteLevel$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SpecularWhiteLevel$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("SpecularWhiteLevel"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SpecularWhiteLevel$VH() { return libraw_canon_makernotes_t$SpecularWhiteLevel$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$NormalWhiteLevel$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$NormalWhiteLevel$LAYOUT() { return libraw_canon_makernotes_t$NormalWhiteLevel$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$NormalWhiteLevel$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("NormalWhiteLevel"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$NormalWhiteLevel$VH() { return libraw_canon_makernotes_t$NormalWhiteLevel$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AverageBlackLevel$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AverageBlackLevel$LAYOUT() { return libraw_canon_makernotes_t$AverageBlackLevel$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AverageBlackLevel$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("AverageBlackLevel"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AverageBlackLevel$VH() { return libraw_canon_makernotes_t$AverageBlackLevel$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$MeteringMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$MeteringMode$LAYOUT() { return libraw_canon_makernotes_t$MeteringMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$MeteringMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("MeteringMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$MeteringMode$VH() { return libraw_canon_makernotes_t$MeteringMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$SpotMeteringMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$SpotMeteringMode$LAYOUT() { return libraw_canon_makernotes_t$SpotMeteringMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$SpotMeteringMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("SpotMeteringMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$SpotMeteringMode$VH() { return libraw_canon_makernotes_t$SpotMeteringMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashMeteringMode$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashMeteringMode$LAYOUT() { return libraw_canon_makernotes_t$FlashMeteringMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashMeteringMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("FlashMeteringMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashMeteringMode$VH() { return libraw_canon_makernotes_t$FlashMeteringMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashExposureLock$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashExposureLock$LAYOUT() { return libraw_canon_makernotes_t$FlashExposureLock$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashExposureLock$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashExposureLock"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashExposureLock$VH() { return libraw_canon_makernotes_t$FlashExposureLock$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ExposureMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ExposureMode$LAYOUT() { return libraw_canon_makernotes_t$ExposureMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ExposureMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ExposureMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ExposureMode$VH() { return libraw_canon_makernotes_t$ExposureMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AESetting$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AESetting$LAYOUT() { return libraw_canon_makernotes_t$AESetting$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AESetting$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AESetting"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AESetting$VH() { return libraw_canon_makernotes_t$AESetting$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$HighlightTonePriority$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$HighlightTonePriority$LAYOUT() { return libraw_canon_makernotes_t$HighlightTonePriority$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$HighlightTonePriority$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("HighlightTonePriority"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$HighlightTonePriority$VH() { return libraw_canon_makernotes_t$HighlightTonePriority$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ImageStabilization$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ImageStabilization$LAYOUT() { return libraw_canon_makernotes_t$ImageStabilization$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ImageStabilization$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ImageStabilization"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ImageStabilization$VH() { return libraw_canon_makernotes_t$ImageStabilization$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FocusMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FocusMode$LAYOUT() { return libraw_canon_makernotes_t$FocusMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FocusMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FocusMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FocusMode$VH() { return libraw_canon_makernotes_t$FocusMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFPoint$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFPoint$LAYOUT() { return libraw_canon_makernotes_t$AFPoint$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFPoint$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPoint"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFPoint$VH() { return libraw_canon_makernotes_t$AFPoint$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FocusContinuous$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FocusContinuous$LAYOUT() { return libraw_canon_makernotes_t$FocusContinuous$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FocusContinuous$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FocusContinuous"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FocusContinuous$VH() { return libraw_canon_makernotes_t$FocusContinuous$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFPointsInFocus30D$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFPointsInFocus30D$LAYOUT() { return libraw_canon_makernotes_t$AFPointsInFocus30D$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFPointsInFocus30D$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPointsInFocus30D"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFPointsInFocus30D$VH() { return libraw_canon_makernotes_t$AFPointsInFocus30D$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFPointsInFocus5D$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFPointsInFocus5D$LAYOUT() { return libraw_canon_makernotes_t$AFPointsInFocus5D$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFPointsInFocus5D$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFPointsInFocus5D"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFPointsInFocus5D$VH() { return libraw_canon_makernotes_t$AFPointsInFocus5D$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFAreaMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFAreaMode$LAYOUT() { return libraw_canon_makernotes_t$AFAreaMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFAreaMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFAreaMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFAreaMode$VH() { return libraw_canon_makernotes_t$AFAreaMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$NumAFPoints$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$NumAFPoints$LAYOUT() { return libraw_canon_makernotes_t$NumAFPoints$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$NumAFPoints$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("NumAFPoints"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$NumAFPoints$VH() { return libraw_canon_makernotes_t$NumAFPoints$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ValidAFPoints$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ValidAFPoints$LAYOUT() { return libraw_canon_makernotes_t$ValidAFPoints$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ValidAFPoints$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ValidAFPoints"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ValidAFPoints$VH() { return libraw_canon_makernotes_t$ValidAFPoints$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFImageWidth$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFImageWidth$LAYOUT() { return libraw_canon_makernotes_t$AFImageWidth$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFImageWidth$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFImageWidth"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFImageWidth$VH() { return libraw_canon_makernotes_t$AFImageWidth$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$AFImageHeight$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$AFImageHeight$LAYOUT() { return libraw_canon_makernotes_t$AFImageHeight$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$AFImageHeight$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("AFImageHeight"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$AFImageHeight$VH() { return libraw_canon_makernotes_t$AFImageHeight$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$PrimaryAFPoint$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$PrimaryAFPoint$LAYOUT() { return libraw_canon_makernotes_t$PrimaryAFPoint$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$PrimaryAFPoint$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("PrimaryAFPoint"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$PrimaryAFPoint$VH() { return libraw_canon_makernotes_t$PrimaryAFPoint$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashMode$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashMode$LAYOUT() { return libraw_canon_makernotes_t$FlashMode$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashMode$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashMode"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashMode$VH() { return libraw_canon_makernotes_t$FlashMode$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashActivity$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashActivity$LAYOUT() { return libraw_canon_makernotes_t$FlashActivity$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashActivity$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashActivity"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashActivity$VH() { return libraw_canon_makernotes_t$FlashActivity$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashBits$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashBits$LAYOUT() { return libraw_canon_makernotes_t$FlashBits$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashBits$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashBits"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashBits$VH() { return libraw_canon_makernotes_t$FlashBits$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$ManualFlashOutput$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$ManualFlashOutput$LAYOUT() { return libraw_canon_makernotes_t$ManualFlashOutput$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$ManualFlashOutput$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("ManualFlashOutput"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$ManualFlashOutput$VH() { return libraw_canon_makernotes_t$ManualFlashOutput$VH_; }

    static final MemoryLayout libraw_canon_makernotes_t$FlashOutput$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout libraw_canon_makernotes_t$FlashOutput$LAYOUT() { return libraw_canon_makernotes_t$FlashOutput$LAYOUT_; }

    static final VarHandle libraw_canon_makernotes_t$FlashOutput$VH_ = libraw_canon_makernotes_t$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("FlashOutput"));
    static final java.lang.invoke.VarHandle libraw_canon_makernotes_t$FlashOutput$VH() { return libraw_canon_makernotes_t$FlashOutput$VH_; }

}

