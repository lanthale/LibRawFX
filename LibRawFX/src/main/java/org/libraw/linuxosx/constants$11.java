// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$11 {

    static final FunctionDescriptor libraw_set_output_tif$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle libraw_set_output_tif$MH = RuntimeHelper.downcallHandle(
        libraw_h.LIBRARIES, "libraw_set_output_tif",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$11.libraw_set_output_tif$FUNC, false
    );
    static final FunctionDescriptor libraw_get_iparams$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle libraw_get_iparams$MH = RuntimeHelper.downcallHandle(
        libraw_h.LIBRARIES, "libraw_get_iparams",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$11.libraw_get_iparams$FUNC, false
    );
    static final FunctionDescriptor libraw_get_lensinfo$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle libraw_get_lensinfo$MH = RuntimeHelper.downcallHandle(
        libraw_h.LIBRARIES, "libraw_get_lensinfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$11.libraw_get_lensinfo$FUNC, false
    );
    static final FunctionDescriptor libraw_get_imgother$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle libraw_get_imgother$MH = RuntimeHelper.downcallHandle(
        libraw_h.LIBRARIES, "libraw_get_imgother",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$11.libraw_get_imgother$FUNC, false
    );
    static final MemorySegment LIBRAW_VERSION_STR$SEGMENT = CLinker.toCString("0.20.2-Release", ResourceScope.newImplicitScope());
}


