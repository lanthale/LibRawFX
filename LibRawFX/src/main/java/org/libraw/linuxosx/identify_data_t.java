// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct identify_data_t {
 *     unsigned int olympus_exif_cfa;
 *     unsigned long long unique_id;
 *     unsigned long long OlyID;
 *     unsigned int tiff_nifds;
 *     int tiff_flip;
 *     int metadata_blocks;
 * };
 * }
 */
public class identify_data_t {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("olympus_exif_cfa"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_LONG_LONG$LAYOUT.withName("unique_id"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("OlyID"),
        Constants$root.C_INT$LAYOUT.withName("tiff_nifds"),
        Constants$root.C_INT$LAYOUT.withName("tiff_flip"),
        Constants$root.C_INT$LAYOUT.withName("metadata_blocks"),
        MemoryLayout.paddingLayout(32)
    ).withName("identify_data_t");
    public static MemoryLayout $LAYOUT() {
        return identify_data_t.$struct$LAYOUT;
    }
    static final VarHandle olympus_exif_cfa$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("olympus_exif_cfa"));
    public static VarHandle olympus_exif_cfa$VH() {
        return identify_data_t.olympus_exif_cfa$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int olympus_exif_cfa;
     * }
     */
    public static int olympus_exif_cfa$get(MemorySegment seg) {
        return (int)identify_data_t.olympus_exif_cfa$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int olympus_exif_cfa;
     * }
     */
    public static void olympus_exif_cfa$set(MemorySegment seg, int x) {
        identify_data_t.olympus_exif_cfa$VH.set(seg, x);
    }
    public static int olympus_exif_cfa$get(MemorySegment seg, long index) {
        return (int)identify_data_t.olympus_exif_cfa$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void olympus_exif_cfa$set(MemorySegment seg, long index, int x) {
        identify_data_t.olympus_exif_cfa$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle unique_id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("unique_id"));
    public static VarHandle unique_id$VH() {
        return identify_data_t.unique_id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long long unique_id;
     * }
     */
    public static long unique_id$get(MemorySegment seg) {
        return (long)identify_data_t.unique_id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long long unique_id;
     * }
     */
    public static void unique_id$set(MemorySegment seg, long x) {
        identify_data_t.unique_id$VH.set(seg, x);
    }
    public static long unique_id$get(MemorySegment seg, long index) {
        return (long)identify_data_t.unique_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void unique_id$set(MemorySegment seg, long index, long x) {
        identify_data_t.unique_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle OlyID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("OlyID"));
    public static VarHandle OlyID$VH() {
        return identify_data_t.OlyID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long long OlyID;
     * }
     */
    public static long OlyID$get(MemorySegment seg) {
        return (long)identify_data_t.OlyID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long long OlyID;
     * }
     */
    public static void OlyID$set(MemorySegment seg, long x) {
        identify_data_t.OlyID$VH.set(seg, x);
    }
    public static long OlyID$get(MemorySegment seg, long index) {
        return (long)identify_data_t.OlyID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void OlyID$set(MemorySegment seg, long index, long x) {
        identify_data_t.OlyID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tiff_nifds$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tiff_nifds"));
    public static VarHandle tiff_nifds$VH() {
        return identify_data_t.tiff_nifds$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int tiff_nifds;
     * }
     */
    public static int tiff_nifds$get(MemorySegment seg) {
        return (int)identify_data_t.tiff_nifds$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int tiff_nifds;
     * }
     */
    public static void tiff_nifds$set(MemorySegment seg, int x) {
        identify_data_t.tiff_nifds$VH.set(seg, x);
    }
    public static int tiff_nifds$get(MemorySegment seg, long index) {
        return (int)identify_data_t.tiff_nifds$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tiff_nifds$set(MemorySegment seg, long index, int x) {
        identify_data_t.tiff_nifds$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tiff_flip$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tiff_flip"));
    public static VarHandle tiff_flip$VH() {
        return identify_data_t.tiff_flip$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int tiff_flip;
     * }
     */
    public static int tiff_flip$get(MemorySegment seg) {
        return (int)identify_data_t.tiff_flip$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int tiff_flip;
     * }
     */
    public static void tiff_flip$set(MemorySegment seg, int x) {
        identify_data_t.tiff_flip$VH.set(seg, x);
    }
    public static int tiff_flip$get(MemorySegment seg, long index) {
        return (int)identify_data_t.tiff_flip$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tiff_flip$set(MemorySegment seg, long index, int x) {
        identify_data_t.tiff_flip$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle metadata_blocks$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("metadata_blocks"));
    public static VarHandle metadata_blocks$VH() {
        return identify_data_t.metadata_blocks$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int metadata_blocks;
     * }
     */
    public static int metadata_blocks$get(MemorySegment seg) {
        return (int)identify_data_t.metadata_blocks$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int metadata_blocks;
     * }
     */
    public static void metadata_blocks$set(MemorySegment seg, int x) {
        identify_data_t.metadata_blocks$VH.set(seg, x);
    }
    public static int metadata_blocks$get(MemorySegment seg, long index) {
        return (int)identify_data_t.metadata_blocks$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void metadata_blocks$set(MemorySegment seg, long index, int x) {
        identify_data_t.metadata_blocks$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


