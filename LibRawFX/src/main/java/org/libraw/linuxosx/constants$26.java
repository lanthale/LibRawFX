// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$26 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$26() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_INT.withName("BaseISO"),
        MemoryLayout.paddingLayout(4),
        JAVA_DOUBLE.withName("Gain"),
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Sensor"),
        MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("SensorUnit"),
        MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("HostBody"),
        JAVA_INT.withName("SensorCode"),
        JAVA_INT.withName("SensorSubCode"),
        JAVA_INT.withName("CoatingCode"),
        JAVA_INT.withName("uncropped"),
        MemoryLayout.sequenceLayout(32, JAVA_BYTE).withName("CaptureSequenceInitiator"),
        MemoryLayout.sequenceLayout(64, JAVA_BYTE).withName("SensorUnitConnector"),
        JAVA_INT.withName("format"),
        MemoryLayout.sequenceLayout(2, JAVA_INT).withName("nIFD_CM"),
        MemoryLayout.sequenceLayout(2, JAVA_INT).withName("RecommendedCrop"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, JAVA_DOUBLE)).withName("mnColorMatrix")
    ).withName("libraw_hasselblad_makernotes_t");
    static final VarHandle const$1 = constants$26.const$0.varHandle(MemoryLayout.PathElement.groupElement("BaseISO"));
    static final VarHandle const$2 = constants$26.const$0.varHandle(MemoryLayout.PathElement.groupElement("Gain"));
    static final VarHandle const$3 = constants$26.const$0.varHandle(MemoryLayout.PathElement.groupElement("SensorCode"));
    static final VarHandle const$4 = constants$26.const$0.varHandle(MemoryLayout.PathElement.groupElement("SensorSubCode"));
    static final VarHandle const$5 = constants$26.const$0.varHandle(MemoryLayout.PathElement.groupElement("CoatingCode"));
}


