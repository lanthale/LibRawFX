// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct libraw_makernotes_t {
 *     struct libraw_canon_makernotes_t canon;
 *     struct libraw_nikon_makernotes_t nikon;
 *     struct libraw_hasselblad_makernotes_t hasselblad;
 *     struct libraw_fuji_info_t fuji;
 *     struct libraw_olympus_makernotes_t olympus;
 *     struct libraw_sony_info_t sony;
 *     struct libraw_kodak_makernotes_t kodak;
 *     struct libraw_panasonic_makernotes_t panasonic;
 *     struct libraw_pentax_makernotes_t pentax;
 *     struct libraw_p1_makernotes_t phaseone;
 *     struct libraw_ricoh_makernotes_t ricoh;
 *     struct libraw_samsung_makernotes_t samsung;
 *     struct libraw_metadata_common_t common;
 * };
 * }
 */
public class libraw_makernotes_t {

    public static MemoryLayout $LAYOUT() {
        return constants$85.const$5;
    }
    public static MemorySegment canon$slice(MemorySegment seg) {
        return seg.asSlice(0, 160);
    }
    public static MemorySegment nikon$slice(MemorySegment seg) {
        return seg.asSlice(160, 224);
    }
    public static MemorySegment hasselblad$slice(MemorySegment seg) {
        return seg.asSlice(384, 384);
    }
    public static MemorySegment fuji$slice(MemorySegment seg) {
        return seg.asSlice(768, 280);
    }
    public static MemorySegment olympus$slice(MemorySegment seg) {
        return seg.asSlice(1048, 408);
    }
    public static MemorySegment sony$slice(MemorySegment seg) {
        return seg.asSlice(1456, 180);
    }
    public static MemorySegment kodak$slice(MemorySegment seg) {
        return seg.asSlice(1636, 244);
    }
    public static MemorySegment panasonic$slice(MemorySegment seg) {
        return seg.asSlice(1880, 68);
    }
    public static MemorySegment pentax$slice(MemorySegment seg) {
        return seg.asSlice(1948, 32);
    }
    public static MemorySegment phaseone$slice(MemorySegment seg) {
        return seg.asSlice(1980, 448);
    }
    public static MemorySegment ricoh$slice(MemorySegment seg) {
        return seg.asSlice(2432, 72);
    }
    public static MemorySegment samsung$slice(MemorySegment seg) {
        return seg.asSlice(2504, 136);
    }
    public static MemorySegment common$slice(MemorySegment seg) {
        return seg.asSlice(2640, 304);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


