// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct libraw_p1_makernotes_t {
 *     char Software[64];
 *     char SystemType[64];
 *     char FirmwareString[256];
 *     char SystemModel[64];
 * };
 * }
 */
public class libraw_p1_makernotes_t {

    public static MemoryLayout $LAYOUT() {
        return constants$50.const$4;
    }
    public static MemorySegment Software$slice(MemorySegment seg) {
        return seg.asSlice(0, 64);
    }
    public static MemorySegment SystemType$slice(MemorySegment seg) {
        return seg.asSlice(64, 64);
    }
    public static MemorySegment FirmwareString$slice(MemorySegment seg) {
        return seg.asSlice(128, 256);
    }
    public static MemorySegment SystemModel$slice(MemorySegment seg) {
        return seg.asSlice(384, 64);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


