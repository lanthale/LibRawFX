// Generated by jextract

package org.libraw.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$106 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$106() {}
    static final VarHandle const$0 = constants$105.const$5.varHandle(MemoryLayout.PathElement.groupElement("leaf"));
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_INT.withName("t_width"),
        JAVA_INT.withName("t_height"),
        JAVA_INT.withName("bps"),
        JAVA_INT.withName("comp"),
        JAVA_INT.withName("phint"),
        JAVA_INT.withName("offset"),
        JAVA_INT.withName("t_flip"),
        JAVA_INT.withName("samples"),
        JAVA_INT.withName("bytes"),
        JAVA_INT.withName("extrasamples"),
        JAVA_INT.withName("t_tile_width"),
        JAVA_INT.withName("t_tile_length"),
        JAVA_INT.withName("sample_format"),
        JAVA_INT.withName("predictor"),
        JAVA_INT.withName("rows_per_strip"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("strip_offsets"),
        JAVA_INT.withName("strip_offsets_count"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("strip_byte_counts"),
        JAVA_INT.withName("strip_byte_counts_count"),
        JAVA_INT.withName("t_filters"),
        JAVA_INT.withName("t_vwidth"),
        JAVA_INT.withName("t_vheight"),
        JAVA_INT.withName("t_lm"),
        JAVA_INT.withName("t_tm"),
        JAVA_INT.withName("t_fuji_width"),
        JAVA_FLOAT.withName("t_shutter"),
        JAVA_LONG.withName("opcode2_offset"),
        JAVA_LONG.withName("lineartable_offset"),
        JAVA_INT.withName("lineartable_len"),
        MemoryLayout.sequenceLayout(2, MemoryLayout.structLayout(
            JAVA_INT.withName("parsedfields"),
            JAVA_SHORT.withName("illuminant"),
            MemoryLayout.paddingLayout(2),
            MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("calibration"),
            MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, JAVA_FLOAT)).withName("colormatrix"),
            MemoryLayout.sequenceLayout(3, MemoryLayout.sequenceLayout(4, JAVA_FLOAT)).withName("forwardmatrix")
        ).withName("libraw_dng_color_t")).withName("dng_color"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("parsedfields"),
            MemoryLayout.sequenceLayout(4104, JAVA_INT).withName("dng_cblack"),
            JAVA_INT.withName("dng_black"),
            MemoryLayout.sequenceLayout(4104, JAVA_FLOAT).withName("dng_fcblack"),
            JAVA_FLOAT.withName("dng_fblack"),
            MemoryLayout.sequenceLayout(4, JAVA_INT).withName("dng_whitelevel"),
            MemoryLayout.sequenceLayout(4, JAVA_SHORT).withName("default_crop"),
            MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("user_crop"),
            JAVA_INT.withName("preview_colorspace"),
            MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("analogbalance"),
            MemoryLayout.sequenceLayout(4, JAVA_FLOAT).withName("asshotneutral"),
            JAVA_FLOAT.withName("baseline_exposure"),
            JAVA_FLOAT.withName("LinearResponseLimit")
        ).withName("dng_levels"),
        JAVA_INT.withName("newsubfiletype")
    ).withName("tiff_ifd_t");
    static final VarHandle const$2 = constants$106.const$1.varHandle(MemoryLayout.PathElement.groupElement("t_width"));
    static final VarHandle const$3 = constants$106.const$1.varHandle(MemoryLayout.PathElement.groupElement("t_height"));
    static final VarHandle const$4 = constants$106.const$1.varHandle(MemoryLayout.PathElement.groupElement("bps"));
    static final VarHandle const$5 = constants$106.const$1.varHandle(MemoryLayout.PathElement.groupElement("comp"));
}


